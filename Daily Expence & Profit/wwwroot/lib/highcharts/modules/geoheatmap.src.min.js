!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/modules/geoheatmap",["highcharts"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){"use strict";e=e?e._modules:{};function t(e,t,o,s){e.hasOwnProperty(t)||(e[t]=s.apply(null,o),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:t,module:e[t]}})))}t(e,"Series/GeoHeatmap/GeoHeatmapPoint.js",[e["Core/Utilities.js"],e["Core/Series/SeriesRegistry.js"]],function(e,t){var{pointClass:t}=t.seriesTypes["map"]["prototype"];const a=e["isNumber"];class o extends t{constructor(){super(...arguments),this.options=void 0,this.series=void 0}applyOptions(e,t){const o=super.applyOptions.call(this,e,t),{lat:s,lon:i}=o.options;var n,r;return a(i)&&a(s)&&({colsize:e=1,rowsize:t=1}=this.series.options,n=i-e/2,r=s-t/2,o.geometry=o.options.geometry={type:"Polygon",coordinates:[[[n,r],[n+e,r],[n+e,r+t],[n,r+t],[n,r]]]}),o}}return o}),t(e,"Series/GeoHeatmap/GeoHeatmapSeries.js",[e["Core/Series/SeriesRegistry.js"],e["Series/GeoHeatmap/GeoHeatmapPoint.js"],e["Core/Utilities.js"]],function(e,t,o){var{map:s}=e["seriesTypes"];const{extend:i,merge:n}=o;class r extends s{constructor(){super(...arguments),this.options=void 0,this.data=void 0,this.points=void 0}update(){var e=this;e.options=n(e.options,arguments[0]),super.update.apply(e,arguments)}}return r.defaultOptions=n(s.defaultOptions,{nullColor:"transparent",tooltip:{pointFormat:"Lat: {point.lat}, Lon: {point.lon}, Value: {point.value}<br/>"},borderWidth:0,colsize:1,rowsize:1}),i(r.prototype,{type:"geoheatmap",pointClass:t,pointArrayMap:["lon","lat","value"]}),e.registerSeriesType("geoheatmap",r),r}),t(e,"masters/modules/geoheatmap.src.js",[],function(){})});