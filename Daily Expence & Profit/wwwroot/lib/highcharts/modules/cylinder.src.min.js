!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/modules/cylinder",["highcharts","highcharts/highcharts-3d"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){"use strict";e=e?e._modules:{};function t(e,t,r,s){e.hasOwnProperty(t)||(e[t]=s.apply(null,r),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:t,module:e[t]}})))}t(e,"Series/Cylinder/CylinderPoint.js",[e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,t){var{prototype:{pointClass:e}}=e["seriesTypes"]["column"];const r=t["extend"];class s extends e{constructor(){super(...arguments),this.options=void 0,this.series=void 0}}return r(s.prototype,{shapeType:"cylinder"}),s}),t(e,"Series/Cylinder/CylinderComposition.js",[e["Core/Color/Color.js"],e["Core/Globals.js"],e["Core/Math3D.js"],e["Core/Renderer/RendererRegistry.js"],e["Core/Utilities.js"]],function(e,t,r,s,i){const n=e["parse"],{charts:h,deg2rad:v}=t,z=r["perspective"],{merge:o,pick:b}=i,d=s.getRendererType().prototype,u=d.cuboidPath,p=e=>!e.some(e=>"C"===e[0]);e=o(d.elements3d.cuboid,{parts:["top","bottom","front","back"],pathType:"cylinder",fillSetter:function(e){return this.singleSetterForParts("fill",null,{front:e,back:e,top:n(e).brighten(.1).get(),bottom:n(e).brighten(-.1).get()}),this.color=this.fill=e,this}});d.elements3d.cylinder=e,d.cylinder=function(e){return this.element3d("cylinder",e)},d.cylinderPath=function(e){var t=this,r=h[t.chartIndex],s=u.call(t,e),i=!s.isTop,n=!s.isFront,o=t.getCylinderEnd(r,e),r=t.getCylinderEnd(r,e,!0);return{front:t.getCylinderFront(o,r),back:t.getCylinderBack(o,r),top:o,bottom:r,zIndexes:{top:i?3:0,bottom:i?0:3,front:n?2:1,back:n?1:2,group:s.zIndexes.group}}},d.getCylinderFront=function(e,t){const r=e.slice(0,3);var s;return p(t)?"M"===(e=t[0])[0]&&(r.push(t[2]),r.push(t[1]),r.push(["L",e[1],e[2]])):(e=t[0],s=t[1],t=t[2],"M"===e[0]&&"C"===s[0]&&"C"===t[0]&&(r.push(["L",t[5],t[6]]),r.push(["C",t[3],t[4],t[1],t[2],s[5],s[6]]),r.push(["C",s[3],s[4],s[1],s[2],e[1],e[2]]))),r.push(["Z"]),r},d.getCylinderBack=function(e,t){const r=[];var s,i;return p(e)?(s=e[0],i=e[2],"M"===s[0]&&"L"===i[0]&&(r.push(["M",i[1],i[2]]),r.push(e[3]),r.push(["L",s[1],s[2]]))):("C"===e[2][0]&&r.push(["M",e[2][5],e[2][6]]),r.push(e[3],e[4])),p(t)?"M"===(i=t[0])[0]&&(r.push(["L",i[1],i[2]]),r.push(t[3]),r.push(t[2])):(s=t[2],e=t[3],i=t[4],"C"===s[0]&&"C"===e[0]&&"C"===i[0]&&(r.push(["L",i[5],i[6]]),r.push(["C",i[3],i[4],i[1],i[2],e[5],e[6]]),r.push(["C",e[3],e[4],e[1],e[2],s[5],s[6]]))),r.push(["Z"]),r},d.getCylinderEnd=function(e,t,r){var{width:s=0,height:i=0,alphaCorrection:n=0}=t;let o=b(t.depth,s,0),h=Math.min(s,o)/2,d=v*(e.options.chart.options3d.beta-90+n),u=(t.y||0)+(r?i:0),p=.5519*h,l=s/2+(t.x||0),c=o/2+(t.z||0),a=[{x:0,y:u,z:h},{x:p,y:u,z:h},{x:h,y:u,z:p},{x:h,y:u,z:0},{x:h,y:u,z:-p},{x:p,y:u,z:-h},{x:0,y:u,z:-h},{x:-p,y:u,z:-h},{x:-h,y:u,z:-p},{x:-h,y:u,z:0},{x:-h,y:u,z:p},{x:-p,y:u,z:h},{x:0,y:u,z:h}],y=Math.cos(d),C=Math.sin(d),f,g,x,m;return a.forEach(function(e,t){x=e.x,m=e.z,a[t].x=x*y-m*C+l,a[t].z=m*y+x*C+c}),f=z(a,e,!0),g=Math.abs(f[3].y-f[9].y)<2.5&&Math.abs(f[0].y-f[6].y)<2.5?this.toLinePath([f[0],f[3],f[6],f[9]],!0):this.getCurvedPath(f)},d.getCurvedPath=function(e){let t=[["M",e[0].x,e[0].y]],r=e.length-2,s;for(s=1;s<r;s+=3)t.push(["C",e[s].x,e[s].y,e[s+1].x,e[s+1].y,e[s+2].x,e[s+2].y]);return t}}),t(e,"Series/Cylinder/CylinderSeries.js",[e["Series/Cylinder/CylinderPoint.js"],e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,t,r){var{column:s}=t["seriesTypes"];const{extend:i,merge:n}=r;class o extends s{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}}return o.defaultOptions=n(s.defaultOptions),i(o.prototype,{pointClass:e}),t.registerSeriesType("cylinder",o),o}),t(e,"masters/modules/cylinder.src.js",[],function(){})});