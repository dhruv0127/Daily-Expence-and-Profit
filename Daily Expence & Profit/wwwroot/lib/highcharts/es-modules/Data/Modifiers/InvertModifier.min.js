"use strict";import DataModifier from"./DataModifier.js";import U from"../../Core/Utilities.js";const merge=U["merge"];class InvertModifier extends DataModifier{constructor(e){super(),this.options=merge(InvertModifier.defaultOptions,e)}modifyCell(e,t,o,i,l){const n=e.modified,s=n.getRowIndexBy("columnNames",t);return void 0===s?n.setColumns(this.modifyTable(e.clone()).getColumns(),void 0,l):n.setCell(""+o,s,i,l),e}modifyColumns(e,n,s,m){const r=e.modified,o=r.getColumn("columnNames")||[];let f=e.getColumnNames(),i=e.getRowCount()!==o.length;if(!i)for(let e=0,t=f.length;e<t;++e)if(f[e]!==o[e]){i=!0;break}if(i)return this.modifyTable(e,m);for(let e=0,t=(f=Object.keys(n)).length,i,o,l;e<t;++e){i=n[o=f[e]],l=r.getRowIndexBy("columnNames",o)||r.getRowCount();for(let e=0,t=s,o=i.length;e<o;++e,++t)r.setCell(""+t,l,i[e],m)}return e}modifyRows(e,l,n,s){const m=e.getColumnNames(),r=e.modified,o=r.getColumn("columnNames")||[];let i=e.getRowCount()!==o.length;if(!i)for(let e=0,t=m.length;e<t;++e)if(m[e]!==o[e]){i=!0;break}if(i)return this.modifyTable(e,s);for(let e=0,o=n,t=l.length,i;e<t;++e,++o)if((i=l[e])instanceof Array)r.setColumn(""+o,i);else for(let e=0,t=m.length;e<t;++e)r.setCell(""+o,e,i[m[e]],s);return e}modifyTable(i,e){this.emit({type:"modify",detail:e,table:i});const t=i.modified;if(i.hasColumns(["columnNames"])){const l=((i.deleteColumns(["columnNames"])||{}).columnNames||[]).map(e=>""+e),n={};for(let e=0,t=i.getRowCount(),o;e<t;++e)(o=i.getRow(e))&&(n[l[e]]=o);t.deleteColumns(),t.setColumns(n)}else{const s={};for(let e=0,t=i.getRowCount(),o;e<t;++e)(o=i.getRow(e))&&(s[""+e]=o);s.columnNames=i.getColumnNames(),t.deleteColumns(),t.setColumns(s)}return this.emit({type:"afterModify",detail:e,table:i}),i}}InvertModifier.defaultOptions={modifier:"Invert"},DataModifier.registerType("Invert",InvertModifier);export default InvertModifier;