"use strict";import DataModifier from"./DataModifier.js";import DataTable from"../DataTable.js";import U from"../../Core/Utilities.js";const merge=U["merge"];class SortModifier extends DataModifier{static ascending(e,o){return(e||0)<(o||0)?-1:(o||0)<(e||0)?1:0}static descending(e,o){return(o||0)<(e||0)?-1:(e||0)<(o||0)?1:0}constructor(e){super(),this.options=merge(SortModifier.defaultOptions,e)}modifyCell(e,o,i,t,r){var d=this,{orderByColumn:n,orderInColumn:s}=d.options;return o===n&&(s?(e.modified.setCell(o,i,t),e.modified.setColumn(s,d.modifyTable(new DataTable({columns:e.getColumns([n,s])})).modified.getColumn(s))):d.modifyTable(e,r)),e}modifyColumns(e,o,i,t){const r=this,{orderByColumn:d,orderInColumn:n}=r.options,s=Object.keys(o);return-1<s.indexOf(d)&&(n&&o[s[0]].length?(e.modified.setColumns(o,i),e.modified.setColumn(n,r.modifyTable(new DataTable({columns:e.getColumns([d,n])})).modified.getColumn(n))):r.modifyTable(e,t)),e}modifyRows(e,o,i,t){var r=this,{orderByColumn:d,orderInColumn:n}=r.options;return n&&o.length?(e.modified.setRows(o,i),e.modified.setColumn(n,r.modifyTable(new DataTable({columns:e.getColumns([d,n])})).modified.getColumn(n))):r.modifyTable(e,t),e}modifyTable(e,o){var i=this;i.emit({type:"modify",detail:o,table:e});const t=e.getColumnNames(),r=e.getRowCount(),d=e.getRows().map((e,o)=>({index:o,row:e})),{direction:n,orderByColumn:s,orderInColumn:m}=i.options,l="asc"===n?SortModifier.ascending:SortModifier.descending,a=t.indexOf(s),f=e.modified;if(-1!==a&&d.sort((e,o)=>l(e.row[a],o.row[a])),m){const u=[];for(let e=0;e<r;++e)u[d[e].index]=e;f.setColumns({[m]:u})}else{const C=[];for(let e=0;e<r;++e)C.push(d[e].row);f.setRows(C,0)}return i.emit({type:"afterModify",detail:o,table:e}),e}}SortModifier.defaultOptions={modifier:"Sort",direction:"desc",orderByColumn:"y"},DataModifier.registerType("Sort",SortModifier);export default SortModifier;