"use strict";import DataConnector from"./DataConnector.js";import H from"../../Core/Globals.js";const win=H["win"];import HTMLTableConverter from"../Converters/HTMLTableConverter.js";import U from"../../Core/Utilities.js";const merge=U["merge"];class HTMLTableConnector extends DataConnector{constructor(e){e=merge(HTMLTableConnector.defaultOptions,e);super(e),this.converter=new HTMLTableConverter(e),this.options=e}load(e){var t=this,o=(t.table.deleteColumns(),t.emit({type:"load",detail:e,table:t.table,tableElement:t.tableElement}),t.options)["table"];let r;return"string"==typeof o?(t.tableID=o,r=win.document.getElementById(o)):(r=o,t.tableID=r.id),t.tableElement=r||void 0,t.tableElement?(t.converter.parse(merge({tableElement:t.tableElement},t.options),e),t.table.setColumns(t.converter.getTable().getColumns()),t.emit({type:"afterLoad",detail:e,table:t.table,tableElement:t.tableElement}),Promise.resolve(this)):(t.emit({type:"loadError",detail:e,error:o="HTML table not provided, or element with ID not found",table:t.table}),Promise.reject(new Error(o)))}}HTMLTableConnector.defaultOptions={table:""},DataConnector.registerType("HTMLTable",HTMLTableConnector);export default HTMLTableConnector;