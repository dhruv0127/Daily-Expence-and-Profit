"use strict";import U from"../Core/Utilities.js";const{addEvent,fireEvent,uniqueKey}=U;class DataTable{static isNull(o){if(o===DataTable.NULL)return!0;if(o instanceof Array){if(!o.length)return!1;for(let e=0,t=o.length;e<t;++e)if(null!==o[e])return!1}else{var s=Object.keys(o);if(!s.length)return!1;for(let e=0,t=s.length;e<t;++e)if(null!==o[s[e]])return!1}return!0}constructor(e={}){this.aliasMap={},this.autoId=!e.id,this.columns={},this.id=e.id||uniqueKey(),(this.modified=this).rowCount=0,this.versionTag=uniqueKey();const i=e.columns||{},l=Object.keys(i),n=this.columns;let r=0;for(let e=0,t=l.length,o,s;e<t;++e)s=l[e],o=i[s].slice(),n[s]=o,r=Math.max(r,o.length);for(let e=0,t=l.length;e<t;++e)n[l[e]].length=r;this.rowCount=r;const s=e.aliasMap||{},a=Object.keys(s),u=this.aliasMap;for(let e=0,t=a.length,o;e<t;++e)o=a[e],u[o]=s[o]}clone(e,t){const o=this,s={},i=(o.emit({type:"cloneTable",detail:t}),e||(s.aliasMap=o.aliasMap,s.columns=o.columns),o.autoId||(s.id=o.id),new DataTable(s));return e||(i.versionTag=o.versionTag),o.emit({type:"afterCloneTable",detail:t,tableClone:i}),i}deleteColumnAlias(e){const t=this,o=t.aliasMap,s=o[e],i=t.modifier;return s&&(delete t.aliasMap[e],i&&i.modifyColumns(t,{[s]:new Array(t.rowCount)},0)),s}deleteColumns(i,e){const t=this,l=t.columns,n={},r={},o=t.modifier,a=t.rowCount;if((i=i||Object.keys(l)).length){t.emit({type:"deleteColumns",columnNames:i,detail:e});for(let e=0,t=i.length,o,s;e<t;++e)s=i[e],(o=l[s])&&(n[s]=o,r[s]=new Array(a)),delete l[s];return Object.keys(l).length||(t.rowCount=0),o&&o.modifyColumns(t,r,0,e),t.emit({type:"afterDeleteColumns",columns:n,columnNames:i,detail:e}),n}}deleteRows(i,l=1,e){const n=this,r=[],a=[],t=n.modifier;if(n.emit({type:"deleteRows",detail:e,rowCount:l,rowIndex:i||0}),void 0===i&&(i=0,l=n.rowCount),0<l&&i<n.rowCount){var u=n.columns,m=Object.keys(u);for(let o=0,e=m.length,t,s;o<e;++o){s=(t=u[m[o]]).splice(i,l),o||(n.rowCount=t.length);for(let e=0,t=s.length;e<t;++e)r[e]=r[e]||[],r[e][o]=s[e];a.push(new Array(e))}}return t&&t.modifyRows(n,a,i||0,e),n.emit({type:"afterDeleteRows",detail:e,rowCount:l,rowIndex:i||0,rows:r}),r}emit(e){switch(e.type){case"afterDeleteColumns":case"afterDeleteRows":case"afterSetCell":case"afterSetColumns":case"afterSetRows":this.versionTag=uniqueKey()}fireEvent(this,e.type,e)}getCell(e,t){e=this.aliasMap[e]||e;e=this.columns[e];if(e)return e[t]}getCellAsBoolean(e,t){e=this.aliasMap[e]||e;e=this.columns[e];return!(!e||!e[t])}getCellAsNumber(e,t,o){e=this.aliasMap[e]||e;e=this.columns[e];let s=e&&e[t];switch(typeof s){case"boolean":return s?1:0;case"number":return isNaN(s)&&!o?null:s}return s=parseFloat(""+s),isNaN(s)&&!o?null:s}getCellAsString(e,t){e=this.aliasMap[e]||e;e=this.columns[e];return""+(e&&e[t])}getColumn(e,t){return this.getColumns([e],t)[e]}getColumnAliases(){return Object.keys(this.aliasMap)}getColumnAsNumbers(t,e){const o=this.columns[t=this.aliasMap[t]||t],s=[];if(o){var i=o.length;if(e)for(let e=0;e<i;++e)s.push(this.getCellAsNumber(t,e,!0));else{for(let e=0,t;e<i;++e){if("number"==typeof(t=o[e]))return o.slice();if(null!=t)break}for(let e=0;e<i;++e)s.push(this.getCellAsNumber(t,e))}}return s}getColumnNames(){return Object.keys(this.columns)}getColumns(i,l){const n=this.aliasMap,r=this.columns,a={};for(let e=0,t=(i=i||Object.keys(r)).length,o,s;e<t;++e)s=i[e],(o=r[n[s]||s])&&(a[s]=l?o:o.slice());return a}getModifier(){return this.modifier}getRow(e,t){return this.getRows(e,1,t)[0]}getRowCount(){return this.rowCount}getRowIndexBy(e,t,o){e=this.aliasMap[e]||e;const s=this.columns[e];if(s){e=s.indexOf(t,o);if(-1!==e)return e}}getRowObject(e,t){return this.getRowObjects(e,1,t)[0]}getRowObjects(l=0,n=this.rowCount-l,r){const a=this.aliasMap,u=this.columns,m=new Array(n);r=r||Object.keys(u);for(let e=l,t=0,o=Math.min(this.rowCount,l+n),s,i;e<o;++e,++t){i=m[t]={};for(const h of r)s=u[a[h]||h],i[h]=s?s[e]:void 0}return m}getRows(l=0,n=this.rowCount-l,r){const a=this.aliasMap,u=this.columns,m=new Array(n);r=r||Object.keys(u);for(let e=l,t=0,o=Math.min(this.rowCount,l+n),s,i;e<o;++e,++t){i=m[t]=[];for(const h of r)s=u[a[h]||h],i.push(s?s[e]:void 0)}return m}getVersionTag(){return this.versionTag}hasColumns(s){var i=this.aliasMap,l=this.columns;for(let e=0,t=s.length,o;e<t;++e)if(!l[o=s[e]]&&!i[o])return!1;return!0}hasRowWith(e,t){e=this.aliasMap[e]||e;const o=this.columns[e];return!!o&&-1!==o.indexOf(t)}on(e,t){return addEvent(this,e,t)}renameColumn(e,t){const o=this.columns;if(o[e]){if(e!==t){const s=this.aliasMap;s[t]&&delete s[t],o[t]=o[e],delete o[e]}return!0}return!1}setCell(e,t,o,s){const i=this,l=i.columns,n=i.modifier;e=i.aliasMap[e]||e;let r=l[e];r&&r[t]===o||(i.emit({type:"setCell",cellValue:o,columnName:e,detail:s,rowIndex:t}),r=r||(l[e]=new Array(i.rowCount)),t>=i.rowCount&&(i.rowCount=t+1),r[t]=o,n&&n.modifyCell(i,e,t,o),i.emit({type:"afterSetCell",cellValue:o,columnName:e,detail:s,rowIndex:t}))}setColumn(e,t=[],o=0,s){this.setColumns({[e]:t},o,s)}setColumnAlias(e,t){const o=this.aliasMap;return!o[e]&&(o[e]=t,!0)}setColumns(i,l,e){const n=this,r=n.columns,t=n.modifier,a=(n.rowCount,void 0===l),u=Object.keys(i);n.emit({type:"setColumns",columns:i,columnNames:u,detail:e,rowIndex:l});for(let e=0,t=u.length,o,s;e<t;++e)if(s=u[e],o=i[s],s=n.aliasMap[s]||s,a)r[s]=o.slice(),n.rowCount=o.length;else{const m=r[s]||(r[s]=new Array(n.rowCount));for(let e=l||0,t=o.length;e<t;++e)m[e]=o[e];n.rowCount=Math.max(n.rowCount,m.length)}var o=Object.keys(r);for(let e=0,t=o.length;e<t;++e)r[o[e]].length=n.rowCount;t&&t.modifyColumns(n,i,l||0),n.emit({type:"afterSetColumns",columns:i,columnNames:u,detail:e,rowIndex:l})}setModifier(t,o){const s=this;let e;return s.emit({type:"setModifier",detail:o,modifier:t,modified:s.modified}),(s.modified=s).modifier=t,(e=t?t.modify(s):Promise.resolve(s)).then(e=>(e.emit({type:"afterSetModifier",detail:o,modifier:t,modified:e.modified}),e)).catch(e=>{throw s.emit({type:"setModifierError",error:e,modifier:t,modified:s.modified}),e})}setRow(e,t,o){this.setRows([e],t,o)}setRows(t,o=this.rowCount,e){const s=this,l=s.aliasMap,n=s.columns,r=Object.keys(n),i=s.modifier,a=t.length;s.emit({type:"setRows",detail:e,rowCount:a,rowIndex:o,rows:t});for(let e=0,s=o,i;e<a;++e,++s)if((i=t[e])===DataTable.NULL)for(let e=0,t=r.length;e<t;++e)n[r[e]][s]=null;else if(i instanceof Array)for(let e=0,t=r.length;e<t;++e)n[r[e]][s]=i[e];else{var u=Object.keys(i);for(let e=0,t=u.length,o;e<t;++e)o=l[o=u[e]]||o,n[o]||(n[o]=new Array(s+1)),n[o][s]=i[o]}var m=o+a;if(m>s.rowCount){s.rowCount=m;for(let e=0,t=r.length;e<t;++e)n[r[e]].length=m}i&&i.modifyRows(s,t,o),s.emit({type:"afterSetRows",detail:e,rowCount:a,rowIndex:o,rows:t})}}DataTable.NULL={};export default DataTable;