"use strict";import DerivedComposition from"../DerivedComposition.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{line:LineSeries}=SeriesRegistry["seriesTypes"];import U from"../../Core/Utilities.js";const{correctFloat,merge,extend}=U;class ParetoSeries extends LineSeries{constructor(){super(...arguments),this.data=void 0,this.points=void 0,this.options=void 0}sumPointsPercents(e,t,i,r){let o=0,a=0,n=[],p;return e.forEach(function(e,s){null!==e&&(r?o+=e:(p=e/i*100,n.push([t[s],correctFloat(a+p)]),a+=p))}),r?o:n}setDerivedData(){var e=this.baseSeries.xData,s=this.baseSeries.yData,t=this.sumPointsPercents(s,e,null,!0);this.setData(this.sumPointsPercents(s,e,t,!1),!1)}}ParetoSeries.defaultOptions=merge(LineSeries.defaultOptions,{zIndex:3}),extend(ParetoSeries.prototype,{hasDerivedData:DerivedComposition.hasDerivedData}),DerivedComposition.compose(ParetoSeries),SeriesRegistry.registerSeriesType("pareto",ParetoSeries);export default ParetoSeries;