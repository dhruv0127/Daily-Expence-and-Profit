import U from"../../Core/Utilities.js";const{defined,relativeLength}=U;var SankeyColumnComposition;!function(t){t.compose=function(t,n){const e=t;return e.sankeyColumn=new o(e,n),e};class o{constructor(t,n){this.points=t,this.series=n}getTranslationFactor(t){const n=this.points,e=n.slice(),o=t.chart,i=t.options.minLinkWidth||0;let s,r=0,a,h=(o.plotSizeY||0)-(t.options.borderWidth||0)-(n.length-1)*t.nodePadding;for(;n.length;){for(r=h/n.sankeyColumn.sum(),s=!1,a=n.length;a--;)n[a].getSum()*r<i&&(n.splice(a,1),h-=i,s=!0);if(!s)break}return n.length=0,e.forEach(t=>{n.push(t)}),r}top(e){const o=this.series,i=o.nodePadding;var t=this.points.reduce(function(t,n){return 0<t&&(t+=i),t+=Math.max(n.getSum()*e,o.options.minLinkWidth||0)},0);return((o.chart.plotSizeY||0)-t)/2}left(e){const o=this.series,t=o.chart,i=o.options.equalNodes,s=t.inverted?t.plotHeight:t.plotWidth,r=o.nodePadding;var n=this.points.reduce(function(t,n){return 0<t&&(t+=r),t+=i?s/n.series.nodes.length-r:Math.max(n.getSum()*e,o.options.minLinkWidth||0)},0);return((t.plotSizeX||0)-Math.round(n))/2}sum(){return this.points.reduce(function(t,n){return t+n.getSum()},0)}offset(n,e){const o=this.points,i=this.series,s=i.nodePadding;let r=0,a;if(i.is("organization")&&n.hangsFrom)return{absoluteTop:n.hangsFrom.nodeY};for(let t=0;t<o.length;t++){var h=o[t].getSum(),u=Math.max(h*e,i.options.minLinkWidth||0),l=n.options[i.chart.inverted?"offsetHorizontal":"offsetVertical"],d=n.options.offset||0;if(a=h?u+s:0,o[t]===n)return{relativeTop:r+(defined(l)?relativeLength(l,u):relativeLength(d,a))};r+=a}}}t.SankeyColumnAdditions=o}(SankeyColumnComposition=SankeyColumnComposition||{});export default SankeyColumnComposition;