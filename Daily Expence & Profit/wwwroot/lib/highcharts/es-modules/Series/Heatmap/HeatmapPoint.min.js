"use strict";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{scatter:{prototype:{pointClass:ScatterPoint}}}=SeriesRegistry["seriesTypes"];import U from"../../Core/Utilities.js";const{clamp,defined,extend,pick}=U;class HeatmapPoint extends ScatterPoint{constructor(){super(...arguments),this.options=void 0,this.series=void 0,this.value=void 0,this.x=void 0,this.y=void 0}applyOptions(t,e){return!this.isNull&&null!==this.value||delete this.color,super.applyOptions(t,e),this.formatPrefix=this.isNull||null===this.value?"null":"point",this}getCellAttributes(){const t=this,e=t.series,i=e.options,s=(i.colsize||1)/2,r=(i.rowsize||1)/2,a=e.xAxis,l=e.yAxis,p=t.options.marker||e.options.marker,n=e.pointPlacementToXValue(),h=pick(t.pointPadding,i.pointPadding,0),d={x1:clamp(Math.round(a.len-a.translate(t.x-s,!1,!0,!1,!0,-n)),-a.len,2*a.len),x2:clamp(Math.round(a.len-a.translate(t.x+s,!1,!0,!1,!0,-n)),-a.len,2*a.len),y1:clamp(Math.round(l.translate(t.y-r,!1,!0,!1,!0)),-l.len,2*l.len),y2:clamp(Math.round(l.translate(t.y+r,!1,!0,!1,!0)),-l.len,2*l.len)};return[["width","x"],["height","y"]].forEach(function(t){var e=t[0],t=t[1];let i=t+"1",s=t+"2";var r=Math.abs(d[i]-d[s]),n=p&&p.lineWidth||0,o=Math.abs(d[i]+d[s])/2,e=p&&p[e];defined(e)&&e<r&&(r=e/2+n/2,d[i]=o-r,d[s]=o+r),h&&(("x"===t&&a.reversed||"y"===t&&!l.reversed)&&(i=s,s=t+"1"),d[i]+=h,d[s]-=h)}),d}haloPath(t){if(!t)return[];var{x:e=0,y:i=0,width:s=0,height:r=0}=this.shapeArgs||{};return[["M",e-t,i-t],["L",e-t,i+r+t],["L",e+s+t,i+r+t],["L",e+s+t,i-t],["Z"]]}isValid(){return this.value!==1/0&&this.value!==-1/0}}extend(HeatmapPoint.prototype,{dataLabelOnNull:!0,moveToTopOnHover:!0,ttBelow:!1});export default HeatmapPoint;