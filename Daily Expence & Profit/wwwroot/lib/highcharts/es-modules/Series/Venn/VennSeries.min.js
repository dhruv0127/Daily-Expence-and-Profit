"use strict";import A from"../../Core/Animation/AnimationUtilities.js";const animObject=A["animObject"];import Color from"../../Core/Color/Color.js";const color=Color["parse"];import CU from"../../Core/Geometry/CircleUtilities.js";const{getAreaOfIntersectionBetweenCircles,getCirclesIntersectionPolygon,isCircle1CompletelyOverlappingCircle2,isPointInsideAllCircles,isPointOutsideAllCircles}=CU;import DPU from"../DrawPointUtilities.js";import GU from"../../Core/Geometry/GeometryUtilities.js";const getCenterOfPoints=GU["getCenterOfPoints"];import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{scatter:ScatterSeries}=SeriesRegistry["seriesTypes"];import VennPoint from"./VennPoint.js";import VennUtils from"./VennUtils.js";import U from"../../Core/Utilities.js";const{addEvent,extend,isArray,isNumber,isObject,isString,merge}=U;class VennSeries extends ScatterSeries{constructor(){super(...arguments),this.data=void 0,this.mapOfIdToRelation=void 0,this.options=void 0,this.points=void 0}static getLabelPosition(r,n){let e=r.reduce((e,t)=>{var i=t.r/2;return[{x:t.x,y:t.y},{x:t.x+i,y:t.y},{x:t.x-i,y:t.y},{x:t.x,y:t.y+i},{x:t.x,y:t.y-i}].reduce((e,t)=>{var i=VennUtils.getMarginFromCircles(t,r,n);return e.margin<i&&(e.point=t,e.margin=i),e},e)},{point:void 0,margin:-Number.MAX_VALUE}).point;var t=VennUtils.nelderMead(function(e){return-VennUtils.getMarginFromCircles({x:e[0],y:e[1]},r,n)},[e.x,e.y]);return e={x:t[0],y:t[1]},e=isPointInsideAllCircles(e,r)&&isPointOutsideAllCircles(e,n)?e:1<r.length?getCenterOfPoints(getCirclesIntersectionPolygon(r)):{x:r[0].x,y:r[0].y}}static getLabelValues(e,t){const r=e.sets,i=t.reduce((e,t)=>{var i=-1<r.indexOf(t.sets[0]);return t.circle&&e[i?"internal":"external"].push(t.circle),e},{internal:[],external:[]});i.external=i.external.filter(t=>i.internal.some(e=>!isCircle1CompletelyOverlappingCircle2(t,e)));e=VennSeries.getLabelPosition(i.internal,i.external);return{position:e,width:VennUtils.getLabelWidth(e,i.internal,i.external)}}static layout(e){const n={},o={};if(0<e.length){const s=VennUtils.layoutGreedyVenn(e),a=e.filter(VennUtils.isSet);e.forEach(function(e){const t=e.sets;var i=t.join(),r=VennUtils.isSet(e)?s[i]:getAreaOfIntersectionBetweenCircles(t.map(e=>s[e]));r&&(n[i]=r,o[i]=VennSeries.getLabelValues(e,a))})}return{mapOfIdToShape:n,mapOfIdToLabelValues:o}}static getScale(e,t,i){var r=i.bottom-i.top,n=i.right-i.left,o=(i.right+i.left)/2,i=(i.top+i.bottom)/2,n=Math.min(0<n?1/n*e:1,0<r?1/r*t:1);return{scale:n,centerX:e/2-o*n,centerY:t/2-i*n}}static updateFieldBoundaries(e,t){var i=t.x-t.r,r=t.x+t.r,n=t.y+t.r,t=t.y-t.r;return(!isNumber(e.left)||e.left>i)&&(e.left=i),(!isNumber(e.right)||e.right<r)&&(e.right=r),(!isNumber(e.top)||e.top>t)&&(e.top=t),(!isNumber(e.bottom)||e.bottom<n)&&(e.bottom=n),e}animate(e){if(!e){const t=this,n=animObject(t.options.animation);t.points.forEach(function(e){var t=e.shapeArgs;if(e.graphic&&t){const i={},r={};t.d?i.opacity=.001:(i.r=0,r.r=t.r),e.graphic.attr(i).animate(r,n),t.d&&setTimeout(function(){e&&e.graphic&&e.graphic.animate({opacity:1})},n.duration)}},t)}}drawPoints(){const r=this,n=r.chart,o=r.group,e=r.points||[],s=n.renderer;e.forEach(function(e){var t={zIndex:isArray(e.sets)?e.sets.length:0},i=e.shapeArgs;n.styledMode||extend(t,r.pointAttribs(e,e.state)),DPU.draw(e,{isNew:!e.graphic,animatableAttribs:i,attribs:t,group:o,renderer:s,shapeType:i&&i.d?"path":"circle"})})}init(){ScatterSeries.prototype.init.apply(this,arguments),delete this.opacity}pointAttribs(e,t){var i=this.options||{},r=e&&e.options||{},t=t&&i.states[t]||{},i=merge(i,{color:e&&e.color},r,t);return{fill:color(i.color).brighten(i.brightness).get(),opacity:i.opacity,stroke:i.borderColor,"stroke-width":i.borderWidth,dashstyle:i.borderDashStyle}}translate(){var e=this.chart,t=(this.processedXData=this.xData,this.generatePoints(),VennUtils.processVennData(this.options.data,VennSeries.splitter));const{mapOfIdToShape:p,mapOfIdToLabelValues:d}=VennSeries.layout(t),i=Object.keys(p).filter(function(e){e=p[e];return e&&isNumber(e.r)}).reduce(function(e,t){return VennSeries.updateFieldBoundaries(e,p[t])},{top:0,bottom:0,left:0,right:0}),r=VennSeries.getScale(e.plotWidth,e.plotHeight,i),m=r.scale,h=r.centerX,g=r.centerY;this.points.forEach(function(e){let t=isArray(e.sets)?e.sets:[],i=t.join(),r=p[i],n,o=d[i]||{},s=o.width,a=o.position,l=e.options&&e.options.dataLabels;if(r){if(r.r)n={x:h+r.x*m,y:g+r.y*m,r:r.r*m};else if(r.d){const c=r.d;c.forEach(e=>{"M"===e[0]?(e[1]=h+e[1]*m,e[2]=g+e[2]*m):"A"===e[0]&&(e[1]=e[1]*m,e[2]=e[2]*m,e[6]=h+e[6]*m,e[7]=g+e[7]*m)}),n={d:c}}a?(a.x=h+a.x*m,a.y=g+a.y*m):a={},isNumber(s)&&(s=Math.round(s*m))}e.shapeArgs=n,a&&n&&(e.plotX=a.x,e.plotY=a.y),s&&n&&(e.dlOptions=merge(!0,{style:{width:s}},isObject(l,!0)?l:void 0)),e.name=e.options.name||t.join("âˆ©")})}}VennSeries.splitter="highcharts-split",VennSeries.defaultOptions=merge(ScatterSeries.defaultOptions,{borderColor:"#cccccc",borderDashStyle:"solid",borderWidth:1,brighten:0,clip:!1,colorByPoint:!0,dataLabels:{enabled:!0,verticalAlign:"middle",formatter:function(){return this.point.name}},inactiveOtherPoints:!0,marker:!1,opacity:.75,showInLegend:!1,legendType:"point",states:{hover:{opacity:1,borderColor:"#333333"},select:{color:"#cccccc",borderColor:"#000000",animation:!1},inactive:{opacity:.075}},tooltip:{pointFormat:"{point.name}: {point.value}"},legendSymbol:"rectangle"}),extend(VennSeries.prototype,{axisTypes:[],directTouch:!0,isCartesian:!1,pointArrayMap:["value"],pointClass:VennPoint,utils:VennUtils}),SeriesRegistry.registerSeriesType("venn",VennSeries);export default VennSeries;addEvent(VennSeries,"afterSetOptions",function(e){const t=e.options,i=t.states;this.is("venn")&&Object.keys(i).forEach(function(e){i[e].halo=!1})});