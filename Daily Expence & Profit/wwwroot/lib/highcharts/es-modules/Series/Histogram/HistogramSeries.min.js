"use strict";import DerivedComposition from"../DerivedComposition.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{column:ColumnSeries}=SeriesRegistry["seriesTypes"];import U from"../../Core/Utilities.js";const{arrayMax,arrayMin,correctFloat,extend,isNumber,merge,objectEach}=U,binsNumberFormulas={"square-root":function(t){return Math.ceil(Math.sqrt(t.options.data.length))},sturges:function(t){return Math.ceil(Math.log(t.options.data.length)*Math.LOG2E)},rice:function(t){return Math.ceil(2*Math.pow(t.options.data.length,1/3))}};function fitToBinLeftClosed(r){return function(t){let e=1;for(;r[e]<=t;)e++;return r[--e]}}class HistogramSeries extends ColumnSeries{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0,this.userOptions=void 0}binsNumber(){var t=this.options.binsNumber;const e=binsNumberFormulas[t]||"function"==typeof t&&t;return Math.ceil(e&&e(this.baseSeries)||(isNumber(t)?t:binsNumberFormulas["square-root"](this.baseSeries)))}derivedData(t,e,r){let i=this,o=correctFloat(arrayMax(t)),s=correctFloat(arrayMin(t)),n=[],a={},u=[],c,p;for(r=i.binWidth=correctFloat(isNumber(r)?r||1:(o-s)/e),i.options.pointRange=Math.max(r,0),c=s;c<o&&(i.userOptions.binWidth||correctFloat(o-c)>=r||correctFloat(correctFloat(s+n.length*r)-c)<=0);c=correctFloat(c+r))n.push(c),a[c]=0;return 0!==a[s]&&(n.push(s),a[s]=0),p=fitToBinLeftClosed(n.map(function(t){return parseFloat(t)})),t.forEach(function(t){t=correctFloat(p(t));a[t]++}),objectEach(a,function(t,e){u.push({x:Number(e),y:t,x2:correctFloat(Number(e)+r)})}),u.sort(function(t,e){return t.x-e.x}),u[u.length-1].x2=o,u}setDerivedData(){var t=this.baseSeries.yData;t.length?(t=this.derivedData(t,this.binsNumber(),this.options.binWidth),this.setData(t,!1)):this.setData([])}}HistogramSeries.defaultOptions=merge(ColumnSeries.defaultOptions,{binsNumber:"square-root",binWidth:void 0,pointPadding:0,groupPadding:0,grouping:!1,pointPlacement:"between",tooltip:{headerFormat:"",pointFormat:'<span style="font-size: 0.8em">{point.x} - {point.x2}</span><br/><span style="color:{point.color}">‚óè</span> {series.name} <b>{point.y}</b><br/>'}}),extend(HistogramSeries.prototype,{hasDerivedData:DerivedComposition.hasDerivedData}),DerivedComposition.compose(HistogramSeries),SeriesRegistry.registerSeriesType("histogram",HistogramSeries);export default HistogramSeries;