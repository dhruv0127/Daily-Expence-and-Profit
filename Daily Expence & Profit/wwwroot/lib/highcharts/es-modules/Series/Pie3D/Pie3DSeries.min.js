"use strict";import H from"../../Core/Globals.js";const deg2rad=H["deg2rad"];import Pie3DPoint from"./Pie3DPoint.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{pie:PieSeries}=SeriesRegistry["seriesTypes"];import U from"../../Core/Utilities.js";const{extend,pick}=U;class Pie3DSeries extends PieSeries{addPoint(){super.addPoint.apply(this,arguments),this.chart.is3d()&&this.update(this.userOptions,!0)}animate(r){if(this.chart.is3d()){let t=this.options.animation,a,e=this.center,s=this.group,i=this.markerGroup;!0===t&&(t={}),r?(s.oldtranslateX=pick(s.oldtranslateX,s.translateX),s.oldtranslateY=pick(s.oldtranslateY,s.translateY),a={translateX:e[0],translateY:e[1],scaleX:.001,scaleY:.001},s.attr(a),i&&(i.attrSetters=s.attrSetters,i.attr(a))):(a={translateX:s.oldtranslateX,translateY:s.oldtranslateY,scaleX:1,scaleY:1},s.animate(a,t),i&&i.animate(a,t))}else super.animate.apply(this,arguments)}drawDataLabels(){if(this.chart.is3d()){const t=this.chart,l=t.options.chart.options3d;this.data.forEach(function(t){const a=t.shapeArgs,e=a.r,s=(a.alpha||l.alpha)*deg2rad,i=(a.beta||l.beta)*deg2rad,r=(a.start+a.end)/2,o=t.labelPosition,n=o.connectorPosition,h=-e*(1-Math.cos(s))*Math.sin(r),c=e*(Math.cos(i)-1)*Math.cos(r);[o.natural,n.breakAt,n.touchingSliceAt].forEach(function(t){t.x+=c,t.y+=h})})}super.drawDataLabels.apply(this,arguments)}pointAttribs(t){const a=super.pointAttribs.apply(this,arguments),e=this.options;return this.chart.is3d()&&!this.chart.styledMode&&(a.stroke=e.edgeColor||t.color||this.color,a["stroke-width"]=pick(e.edgeWidth,1)),a}translate(){if(super.translate.apply(this,arguments),this.chart.is3d()){let s=this,i=s.options,r=i.depth||0,t=s.chart.options.chart.options3d,o=t.alpha,n=t.beta,h=i.stacking?(i.stack||0)*r:s._i*r;h+=r/2,!1!==i.grouping&&(h=0),s.data.forEach(function(t){let a=t.shapeArgs,e;t.shapeType="arc3d",a.z=h,a.depth=.75*r,a.alpha=o,a.beta=n,a.center=s.center,e=(a.end+a.start)/2,t.slicedTranslation={translateX:Math.round(Math.cos(e)*i.slicedOffset*Math.cos(o*deg2rad)),translateY:Math.round(Math.sin(e)*i.slicedOffset*Math.cos(o*deg2rad))}})}}drawTracker(){super.drawTracker.apply(this,arguments),this.chart.is3d()&&this.points.forEach(function(a){a.graphic&&["out","inn","side1","side2"].forEach(t=>{a.graphic&&(a.graphic[t].element.point=a)})})}}extend(Pie3DSeries.prototype,{pointClass:Pie3DPoint});export default Pie3DSeries;