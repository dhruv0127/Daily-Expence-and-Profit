"use strict";import ColumnSeries from"../Column/ColumnSeries.js";const colProto=ColumnSeries["prototype"];import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";import U from"../../Core/Utilities.js";const{clamp,extend,merge,pick}=U;class ColumnPyramidSeries extends ColumnSeries{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}translate(){let x=this,P=x.chart,M=x.options,t=x.dense=x.closestPointRange*x.xAxis.transA<2,e=x.borderWidth=pick(M.borderWidth,t?0:1),v=x.yAxis,b=M.threshold,k=x.translatedThreshold=v.getThreshold(b),A=pick(M.minPointLength,5),i=x.getColumnMetrics(),L=i.width,T=x.barW=Math.max(L,1+2*e),w=x.pointXOffset=i.offset;P.inverted&&(k-=.5),M.pointPadding&&(T=Math.ceil(T)),colProto.translate.apply(x),x.points.forEach(function(t){let e=pick(t.yBottom,k),i=999+Math.abs(e),o=clamp(t.plotY,-i,v.len+i),s=t.plotX+w,r=T/2,n=Math.min(o,e),l=Math.max(o,e)-n,p,a,d,h,m,c,u,y,g,S,f,C;t.barX=s,t.pointWidth=L,t.tooltipPos=P.inverted?[v.len+v.pos-P.plotLeft-o,x.xAxis.len-s-r,l]:[s+r,o+v.pos-P.plotTop,l],p=b+(t.total||t.y),"percent"===M.stacking&&(p=b+(t.y<0)?-100:100),d=v.toPixels(p,!0),h=(a=P.plotHeight-d-(P.plotHeight-k))?r*(n-d)/a:0,m=a?r*(n+l-d)/a:0,u=s-h+r,y=s+h+r,g=s+m+r,S=s-m+r,f=n-A,C=n+l,t.y<0&&(f=n,C=n+l+A),P.inverted&&(h=r*(d-(c=v.width-n))/(a=d-(v.width-k)),m=r*(d-(c-l))/a,u=s+r+h,y=u-2*h,g=s-m+r,S=s+m+r,f=n,C=n+l-A,t.y<0&&(C=n+l+A)),t.shapeType="path",t.shapeArgs={x:u,y:f,width:y-u,height:l,d:[["M",u,f],["L",y,f],["L",g,C],["L",S,C],["Z"]]}})}}ColumnPyramidSeries.defaultOptions=merge(ColumnSeries.defaultOptions,{}),SeriesRegistry.registerSeriesType("columnpyramid",ColumnPyramidSeries);export default ColumnPyramidSeries;