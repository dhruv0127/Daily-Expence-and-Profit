"use strict";import Point from"../../Core/Series/Point.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{series:Series,seriesTypes:{pie:{prototype:{pointClass:PiePoint}}}}=SeriesRegistry;import U from"../../Core/Utilities.js";const{defined,isNumber,merge,objectEach,pick}=U;class TimelinePoint extends Series.prototype.pointClass{constructor(){super(...arguments),this.options=void 0,this.series=void 0}alignConnector(){let t=this,e=t.series,i=t.connector,o=t.dataLabel,s=t.dataLabel.options=merge(e.options.dataLabels,t.options.dataLabels),r=t.series.chart,n=i.getBBox(),a={x:n.x+o.translateX,y:n.y+o.translateY},c;r.inverted?a.y-=o.options.connectorWidth/2:a.x+=o.options.connectorWidth/2,c=r.isInsidePlot(a.x,a.y),i[c?"animate":"attr"]({d:t.getConnectorPath()}),i.addClass("highcharts-color-"+t.colorIndex),e.chart.styledMode||i.attr({stroke:s.connectorColor||t.color,"stroke-width":s.connectorWidth,opacity:o[defined(o.newOpacity)?"newOpacity":"opacity"]})}drawConnector(){const t=this,e=t.series;t.connector||(t.connector=e.chart.renderer.path(t.getConnectorPath()).attr({zIndex:-1}).add(t.dataLabel)),t.series.chart.isInsidePlot(t.dataLabel.x,t.dataLabel.y)&&t.alignConnector()}getConnectorPath(){let t=this,e=t.series.chart,i=t.series.xAxis.len,o=e.inverted,s=o?"x2":"y2",r=t.dataLabel,n=r.targetPosition,a={x1:t.plotX,y1:t.plotY,x2:t.plotX,y2:(isNumber(n.y)?n:r).y},c=(r.alignAttr||r)[s[0]]<t.series.yAxis.len/2;return o&&(a={x1:t.plotY,y1:i-t.plotX,x2:n.x||r.x,y2:i-t.plotX}),c&&(a[s]+=r[o?"width":"height"]),objectEach(a,function(t,e){a[e]-=(r.alignAttr||r)[e[0]]}),e.renderer.crispLine([["M",a.x1,a.y1],["L",a.x2,a.y2]],r.options.connectorWidth)}init(){const t=super.init.apply(this,arguments);return t.name=pick(t.name,"Event"),t.y=1,t}isValid(){return null!==this.options.y}setState(){const t=super.setState;this.isNull||t.apply(this,arguments)}setVisible(t,e){const i=this.series;e=pick(e,i.options.ignoreHiddenPoint),PiePoint.prototype.setVisible.call(this,t,!1),i.processData(),e&&i.chart.redraw()}applyOptions(t,e){return t=Point.prototype.optionsToObject.call(this,t),this.userDLOptions=merge(this.userDLOptions,t.dataLabels),super.applyOptions(t,e)}}export default TimelinePoint;