"use strict";import DPU from"../DrawPointUtilities.js";import H from"../../Core/Globals.js";const noop=H["noop"];import Series from"../../Core/Series/Series.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{column:ColumnSeries}=SeriesRegistry["seriesTypes"];import U from"../../Core/Utilities.js";const{extend,isArray,isNumber,isObject,merge}=U;import WordcloudPoint from"./WordcloudPoint.js";import WordcloudUtils from"./WordcloudUtils.js";const{archimedeanSpiral,extendPlayingField,getBoundingBoxFromPolygon,getPlayingField,getPolygon,getRandomPosition,getRotation,getScale,getSpiral,intersectionTesting,isPolygonsColliding,rectangularSpiral,rotate2DToOrigin,rotate2DToPoint,squareSpiral,updateFieldBoundaries}=WordcloudUtils;class WordcloudSeries extends ColumnSeries{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}bindAxes(){var t={endOnTick:!1,gridLineWidth:0,lineWidth:0,maxPadding:0,startOnTick:!1,title:void 0,tickPositions:[]};Series.prototype.bindAxes.call(this),extend(this.yAxis.options,t),extend(this.xAxis.options,t)}pointAttribs(t,e){const i=H.seriesTypes.column.prototype.pointAttribs.call(this,t,e);return delete i.stroke,delete i["stroke-width"],i}deriveFontSize(t,e,i){t=isNumber(t)?t:0,e=isNumber(e)?e:1,i=isNumber(i)?i:1;return Math.floor(Math.max(i,t*e))}drawPoints(){let p=this,g=p.hasRendered,t=p.xAxis,e=p.yAxis,i=p.chart,c=p.group,m=p.options,u=m.animation,x=m.allowExtendPlayingField,y=i.renderer,o=y.text().add(c),h=[],S=p.placementStrategy[m.placementStrategy],f,P=m.rotation,n,r=p.points.map(function(t){return t.weight}),b=Math.max.apply(null,r),w=p.points.concat().sort(function(t,e){return e.weight-t.weight}),F;p.group.attr({scaleX:1,scaleY:1}),w.forEach(function(t){var e=1/b*t.weight,e=p.deriveFontSize(e,m.maxFontSize,m.minFontSize),e=extend({fontSize:e+"px"},m.style);o.css(e).attr({x:0,y:0,text:t.name}),e=o.getBBox(!0),t.dimensions={height:e.height,width:e.width}}),F=getPlayingField(t.len,e.len,w),f=getSpiral(p.spirals[m.spiral],{field:F}),w.forEach(function(t){let e=1/b*t.weight,i=p.deriveFontSize(e,m.maxFontSize,m.minFontSize),o=extend({fontSize:i+"px"},m.style),n=S(t,{data:w,field:F,placed:h,rotation:P}),r=extend(p.pointAttribs(t,t.selected&&"select"),{align:"center","alignment-baseline":"middle","dominant-baseline":"middle",x:n.x,y:n.y,text:t.name,rotation:isNumber(n.rotation)?n.rotation:void 0}),s=getPolygon(n.x,n.y,t.dimensions.width,t.dimensions.height,n.rotation),a=getBoundingBoxFromPolygon(s),l=intersectionTesting(t,{rectangle:a,polygon:s,field:F,placed:h,spiral:f,rotation:n.rotation}),d;!l&&x&&(F=extendPlayingField(F,a),l=intersectionTesting(t,{rectangle:a,polygon:s,field:F,placed:h,spiral:f,rotation:n.rotation})),isObject(l)?(r.x=(r.x||0)+l.x,r.y=(r.y||0)+l.y,a.left+=l.x,a.right+=l.x,a.top+=l.y,a.bottom+=l.y,F=updateFieldBoundaries(F,a),h.push(t),t.isNull=!1,t.isInside=!0):t.isNull=!0,u&&(d={x:r.x,y:r.y},g?(delete r.x,delete r.y):(r.x=0,r.y=0)),DPU.draw(t,{animatableAttribs:d,attribs:r,css:o,group:c,renderer:y,shapeArgs:void 0,shapeType:"text"})}),o=o.destroy(),n=getScale(t.len,e.len,F),p.group.attr({scaleX:n,scaleY:n})}hasData(){var t=this;return isObject(t)&&!0===t.visible&&isArray(t.points)&&0<t.points.length}getPlotBox(){var t=this,e=t.chart,i=e.inverted,o=t[i?"yAxis":"xAxis"],t=t[i?"xAxis":"yAxis"],i=o?o.len:e.plotWidth,n=t?t.len:e.plotHeight;return{translateX:(o?o.left:e.plotLeft)+i/2,translateY:(t?t.top:e.plotTop)+n/2,scaleX:1,scaleY:1}}}WordcloudSeries.defaultOptions=merge(ColumnSeries.defaultOptions,{allowExtendPlayingField:!0,animation:{duration:500},borderWidth:0,clip:!1,colorByPoint:!0,cropThreshold:1/0,minFontSize:1,maxFontSize:25,placementStrategy:"center",rotation:{from:0,orientations:2,to:90},showInLegend:!1,spiral:"rectangular",style:{fontFamily:"sans-serif",fontWeight:"900",whiteSpace:"nowrap"},tooltip:{followPointer:!0,pointFormat:'<span style="color:{point.color}">‚óè</span> {series.name}: <b>{point.weight}</b><br/>'}}),extend(WordcloudSeries.prototype,{animate:noop,animateDrilldown:noop,animateDrillupFrom:noop,pointClass:WordcloudPoint,setClip:noop,placementStrategy:{random:function(t,e){var i=e.field,e=e.rotation;return{x:getRandomPosition(i.width)-i.width/2,y:getRandomPosition(i.height)-i.height/2,rotation:getRotation(e.orientations,t.index,e.from,e.to)}},center:function(t,e){e=e.rotation;return{x:0,y:0,rotation:getRotation(e.orientations,t.index,e.from,e.to)}}},pointArrayMap:["weight"],spirals:{archimedean:archimedeanSpiral,rectangular:rectangularSpiral,square:squareSpiral},utils:{extendPlayingField:extendPlayingField,getRotation:getRotation,isPolygonsColliding:isPolygonsColliding,rotate2DToOrigin:rotate2DToOrigin,rotate2DToPoint:rotate2DToPoint}}),SeriesRegistry.registerSeriesType("wordcloud",WordcloudSeries);export default WordcloudSeries;