"use strict";import BoxPlotSeries from"../BoxPlot/BoxPlotSeries.js";import ColumnSeries from"../Column/ColumnSeries.js";import ErrorBarSeriesDefaults from"./ErrorBarSeriesDefaults.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const AreaRangeSeries=SeriesRegistry.seriesTypes["arearange"];import U from"../../Core/Utilities.js";const{addEvent,merge,extend}=U;class ErrorBarSeries extends BoxPlotSeries{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}getColumnMetrics(){return this.linkedParent&&this.linkedParent.columnMetrics||ColumnSeries.prototype.getColumnMetrics.call(this)}drawDataLabels(){const e=this.pointValKey;AreaRangeSeries&&(AreaRangeSeries.prototype.drawDataLabels.call(this),this.data.forEach(function(r){r.y=r[e]}))}toYData(r){return[r.low,r.high]}}ErrorBarSeries.defaultOptions=merge(BoxPlotSeries.defaultOptions,ErrorBarSeriesDefaults),addEvent(ErrorBarSeries,"afterTranslate",function(){this.points.forEach(r=>{r.plotLow=r.plotY})},{order:0}),extend(ErrorBarSeries.prototype,{pointArrayMap:["low","high"],pointValKey:"high",doQuartiles:!1}),SeriesRegistry.registerSeriesType("errorbar",ErrorBarSeries);export default ErrorBarSeries;