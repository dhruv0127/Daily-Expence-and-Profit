"use strict";import DPU from"../DrawPointUtilities.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{series:{prototype:{pointClass:Point}},seriesTypes:{pie:{prototype:{pointClass:PiePoint}},scatter:{prototype:{pointClass:ScatterPoint}}}}=SeriesRegistry;import U from"../../Core/Utilities.js";const{extend,isNumber,pick}=U;class TreemapPoint extends ScatterPoint{constructor(){super(...arguments),this.name=void 0,this.node=void 0,this.options=void 0,this.series=void 0,this.shapeType="rect",this.value=void 0}draw(e){DPU.draw(this,e)}getClassName(){let e=Point.prototype.getClassName.call(this),t=this.series,i=t.options;return this.node.level<=t.nodeMap[t.rootNode].level?e+=" highcharts-above-level":this.node.isLeaf||pick(i.interactByLeaf,!i.allowTraversingTree)?this.node.isLeaf||(e+=" highcharts-internal-node"):e+=" highcharts-internal-node-interactive",e}isValid(){return Boolean(this.id||isNumber(this.value))}setState(e){Point.prototype.setState.call(this,e),this.graphic&&this.graphic.attr({zIndex:"hover"===e?1:0})}shouldDraw(){return isNumber(this.plotY)&&null!==this.y}}extend(TreemapPoint.prototype,{setVisible:PiePoint.prototype.setVisible});export default TreemapPoint;