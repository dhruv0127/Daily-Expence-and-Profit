"use strict";import Color from"../../Core/Color/Color.js";const color=Color["parse"];import ColorMapComposition from"../ColorMapComposition.js";import H from"../../Core/Globals.js";const noop=H["noop"];import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{series:Series,seriesTypes:{column:ColumnSeries,heatmap:HeatmapSeries,scatter:ScatterSeries}}=SeriesRegistry;import TreemapAlgorithmGroup from"./TreemapAlgorithmGroup.js";import TreemapPoint from"./TreemapPoint.js";import TreemapUtilities from"./TreemapUtilities.js";import TU from"../TreeUtilities.js";import Breadcrumbs from"../../Extensions/Breadcrumbs/Breadcrumbs.js";const{getColor,getLevelOptions,updateRootId}=TU;import U from"../../Core/Utilities.js";const{addEvent,correctFloat,defined,error,extend,fireEvent,isArray,isNumber,isObject,isString,merge,pick,stableSort}=U;import"./TreemapComposition.js";import TreemapNode from"./TreemapNode.js";class TreemapSeries extends ScatterSeries{constructor(){super(...arguments),this.axisRatio=void 0,this.data=void 0,this.mapOptionsToLevel=void 0,this.nodeMap=void 0,this.nodeList=void 0,this.options=void 0,this.points=void 0,this.rootNode=void 0,this.tree=void 0,this.level=void 0}algorithmCalcPoints(e,t,o,i){let r,s,a,n,l=o.lW,d=o.lH,p=o.plot,h,c=0,u=o.elArr.length-1;t?(l=o.nW,d=o.nH):h=o.elArr[o.elArr.length-1],o.elArr.forEach(function(e){(t||c<u)&&(0===o.direction?(r=p.x,s=p.y,a=l,n=e/a):(r=p.x,s=p.y,n=d,a=e/n),i.push({x:r,y:s,width:a,height:correctFloat(n)}),0===o.direction?p.y=p.y+n:p.x=p.x+a),c+=1}),o.reset(),0===o.direction?o.width=o.width-l:o.height=o.height-d,p.y=p.parent.y+(p.parent.height-o.height),p.x=p.parent.x+(p.parent.width-o.width),e&&(o.direction=1-o.direction),t||o.addElement(h)}algorithmFill(t,o,e){let i=[],r,s=o.direction,a=o.x,n=o.y,l=o.width,d=o.height,p,h,c,u;return e.forEach(function(e){r=o.width*o.height*(e.val/o.val),p=a,h=n,0===s?(u=d,c=r/u,l-=c,a+=c):(c=l,u=r/c,d-=u,n+=u),i.push({x:p,y:h,width:c,height:u}),t&&(s=1-s)}),i}algorithmLowAspectRatio(t,o,e){let i=[],r=this,s,a={x:o.x,y:o.y,parent:o},n=o.direction,l=0,d=e.length-1,p=new TreemapAlgorithmGroup(o.height,o.width,n,a);return e.forEach(function(e){s=o.width*o.height*(e.val/o.val),p.addElement(s),p.lP.nR>p.lP.lR&&r.algorithmCalcPoints(t,!1,p,i,a),l===d&&r.algorithmCalcPoints(t,!0,p,i,a),l+=1}),i}alignDataLabel(e,t,o){const i=o.style;i&&!defined(i.textOverflow)&&t.text&&t.getBBox().width>t.text.textWidth&&t.css({textOverflow:"ellipsis",width:i.width+="px"}),ColumnSeries.prototype.alignDataLabel.apply(this,arguments),e.dataLabel&&e.dataLabel.attr({zIndex:(e.node.zIndex||0)+1})}calculateChildrenAreas(e,o){let i=this,t=i.options,r=i.mapOptionsToLevel,s=r[e.level+1],a=pick(i[s&&s.layoutAlgorithm]&&s.layoutAlgorithm,t.layoutAlgorithm),n=t.alternateStartingDirection,l,d;d=e.children.filter(function(e){return!e.ignore}),s&&s.layoutStartingDirection&&(o.direction="vertical"===s.layoutStartingDirection?0:1),l=i[a](o,d),d.forEach(function(e,t){t=l[t];e.values=merge(t,{val:e.childrenTotal,direction:n?1-o.direction:o.direction}),e.pointValues=merge(t,{x:t.x/i.axisRatio,y:TreemapUtilities.AXIS_MAX-t.y-t.height,width:t.width/i.axisRatio}),e.children.length&&i.calculateChildrenAreas(e,e.values)})}createList(o){const i=this.chart,e=i.breadcrumbs,r=[];if(e){let t=0,e=(r.push({level:t,levelOptions:i.series[0]}),o.target.nodeMap[o.newRootId]);const s=[];for(;e.parent||""===e.parent;)s.push(e),e=o.target.nodeMap[e.parent];s.reverse().forEach(function(e){r.push({level:++t,levelOptions:e})}),r.length<=1&&(r.length=0)}return r}drawDataLabels(){let t=this,o=t.mapOptionsToLevel,e=t.points.filter(function(e){return e.node.visible}),i,r;e.forEach(function(e){r=o[e.node.level],i={style:{}},e.node.isLeaf||(i.enabled=!1),r&&r.dataLabels&&(i=merge(i,r.dataLabels),t._hasPointLabels=!0),e.shapeArgs&&(i.style.width=e.shapeArgs.width,e.dataLabel&&e.dataLabel.css({width:e.shapeArgs.width+"px"})),e.dlOptions=merge(i,e.options.dataLabels)}),Series.prototype.drawDataLabels.call(this)}drawPoints(e=this.points){const d=this,t=d.chart,p=t.renderer,h=t.styledMode,c=d.options,u=h?{}:c.shadow,m=c.borderRadius,v=t.pointCount<c.animationLimit,g=c.allowTraversingTree;e.forEach(function(e){const t=e.node.levelDynamic,o={},i={},r={},s="level-group-"+e.node.level,a=!!e.graphic,n=v&&a,l=e.shapeArgs;e.shouldDraw()&&(e.isInside=!0,m&&(i.r=m),merge(!0,n?o:i,a?l:{},h?{}:d.pointAttribs(e,e.selected?"select":void 0)),d.colorAttribs&&h&&extend(r,d.colorAttribs(e)),d[s]||(d[s]=p.g(s).attr({zIndex:1e3-(t||0)}).add(d.group),d[s].survive=!0)),e.draw({animatableAttribs:o,attribs:i,css:r,group:d[s],renderer:p,shadow:u,shapeArgs:l,shapeType:e.shapeType}),g&&e.graphic&&(e.drillId=c.interactByLeaf?d.drillToByLeaf(e):d.drillToByGroup(e))})}drillToByGroup(e){let t=!1;return t=e.node.level-this.nodeMap[this.rootNode].level!=1||e.node.isLeaf?t:e.id}drillToByLeaf(e){let t=!1,o;if(e.node.parent!==this.rootNode&&e.node.isLeaf)for(o=e.node;!t;)(o=this.nodeMap[o.parent]).parent===this.rootNode&&(t=o.id);return t}drillToNode(e,t){error(32,!1,void 0,{"treemap.drillToNode":"use treemap.setRootNode"}),this.setRootNode(e,t)}drillUp(){var e=this.nodeMap[this.rootNode];e&&isString(e.parent)&&this.setRootNode(e.parent,!0,{trigger:"traverseUpButton"})}getExtremes(){var{dataMin:e,dataMax:t}=Series.prototype.getExtremes.call(this,this.colorValueData);return this.valueMin=e,this.valueMax=t,Series.prototype.getExtremes.call(this)}getListOfParents(e,t){const o=isArray(e)?e:[],i=isArray(t)?t:[],r=o.reduce(function(e,t,o){t=pick(t.parent,"");return void 0===e[t]&&(e[t]=[]),e[t].push(o),e},{"":[]});return TreemapUtilities.eachObject(r,function(e,t,o){""!==t&&-1===i.indexOf(t)&&(e.forEach(function(e){o[""].push(e)}),delete o[t])}),r}getTree(){var e=this.data.map(function(e){return e.id}),e=this.getListOfParents(this.data,e);return this.nodeMap={},this.nodeList=[],this.buildTree("",-1,0,e)}buildTree(t,e,o,i,r){let s=this,a=[],n=s.points[e],l=0,d,p;return(i[t]||[]).forEach(function(e){p=s.buildTree(s.points[e].id,e,o+1,i,t),l=Math.max(p.height+1,l),a.push(p)}),d=(new s.NodeClass).init(t,e,a,l,o,s,r),a.forEach(e=>{e.parentNode=d}),s.nodeMap[d.id]=d,s.nodeList.push(d),n&&((n.node=d).point=n),d}hasData(){return!!this.processedXData.length}init(e,t){const o=this,i=merge(t.drillUpButton,t.breadcrumbs);var r=addEvent(o,"setOptions",function(e){const t=e.userOptions;defined(t.allowDrillToNode)&&!defined(t.allowTraversingTree)&&(t.allowTraversingTree=t.allowDrillToNode,delete t.allowDrillToNode),defined(t.drillUpButton)&&!defined(t.traverseUpButton)&&(t.traverseUpButton=t.drillUpButton,delete t.drillUpButton)});Series.prototype.init.call(o,e,t),delete o.opacity,o.eventsToUnbind.push(r),o.options.allowTraversingTree&&(o.eventsToUnbind.push(addEvent(o,"click",o.onClickDrillToNode)),o.eventsToUnbind.push(addEvent(o,"setRootNode",function(e){const t=o.chart;t.breadcrumbs&&t.breadcrumbs.updateProperties(o.createList(e))})),o.eventsToUnbind.push(addEvent(o,"update",function(e,t){const o=this.chart.breadcrumbs;o&&e.options.breadcrumbs&&o.update(e.options.breadcrumbs)})),o.eventsToUnbind.push(addEvent(o,"destroy",function(e){const t=this.chart;t.breadcrumbs&&(t.breadcrumbs.destroy(),e.keepEventsForUpdate||(t.breadcrumbs=void 0))}))),e.breadcrumbs||(e.breadcrumbs=new Breadcrumbs(e,i)),o.eventsToUnbind.push(addEvent(e.breadcrumbs,"up",function(e){var t=this.level-e.newLevel;for(let e=0;e<t;e++)o.drillUp()}))}onClickDrillToNode(e){const t=e.point,o=t&&t.drillId;isString(o)&&(t.setState(""),this.setRootNode(o,!0,{trigger:"click"}))}pointAttribs(e,t){let o=isObject(this.mapOptionsToLevel)?this.mapOptionsToLevel:{},i=e&&o[e.node.level]||{},r=this.options,s,a=t&&r.states&&r.states[t]||{},n=e&&e.getClassName()||"",l;return s={stroke:e&&e.borderColor||i.borderColor||a.borderColor||r.borderColor,"stroke-width":pick(e&&e.borderWidth,i.borderWidth,a.borderWidth,r.borderWidth),dashstyle:e&&e.borderDashStyle||i.borderDashStyle||a.borderDashStyle||r.borderDashStyle,fill:e&&e.color||this.color},-1!==n.indexOf("highcharts-above-level")?(s.fill="none",s["stroke-width"]=0):-1!==n.indexOf("highcharts-internal-node-interactive")?(l=pick(a.opacity,r.opacity),s.fill=color(s.fill).setOpacity(l).get(),s.cursor="pointer"):-1!==n.indexOf("highcharts-internal-node")?s.fill="none":t&&(s.fill=color(s.fill).brighten(a.brightness).get()),s}setColorRecursive(o,e,t,i,r){let s=this,a=s&&s.chart,n=a&&a.options&&a.options.colors,l,d;o&&(l=getColor(o,{colors:n,index:i,mapOptionsToLevel:s.mapOptionsToLevel,parentColor:e,parentColorIndex:t,series:s,siblings:r}),(d=s.points[o.i])&&(d.color=l.color,d.colorIndex=l.colorIndex),(o.children||[]).forEach(function(e,t){s.setColorRecursive(e,l.color,l.colorIndex,t,o.children.length)}))}setPointValues(){const n=this,{points:e,xAxis:l,yAxis:d}=n,p=n.chart.styledMode;e.forEach(function(e){var t,o,i,r,{pointValues:s,visible:a}=e.node;s&&a?({height:a,width:s,x:o,y:i}=s,r=e,r=p?0:(n.pointAttribs(r)["stroke-width"]||0)%2/2,t=Math.round(l.toPixels(o,!0))-r,o=Math.round(l.toPixels(o+s,!0))-r,s=Math.round(d.toPixels(i,!0))-r,i=Math.round(d.toPixels(i+a,!0))-r,a={x:Math.min(t,o),y:Math.min(s,i),width:Math.abs(o-t),height:Math.abs(i-s)},e.plotX=a.x+a.width/2,e.plotY=a.y+a.height/2,e.shapeArgs=a):(delete e.plotX,delete e.plotY)})}setRootNode(e,t,o){e=extend({newRootId:e,previousRootId:this.rootNode,redraw:pick(t,!0),series:this},o);fireEvent(this,"setRootNode",e,function(e){const t=e.series;t.idPreviousRoot=e.previousRootId,t.rootNode=e.newRootId,t.isDirty=!0,e.redraw&&t.chart.redraw()})}setState(e){this.options.inactiveOtherPoints=!0,Series.prototype.setState.call(this,e,!1),this.options.inactiveOtherPoints=!1}setTreeValues(e){let t=this,o=t.options,i=t.rootNode,r=t.nodeMap,s=r[i],a=!TreemapUtilities.isBoolean(o.levelIsConstant)||o.levelIsConstant,n=0,l=[],d,p=t.points[e.i];return e.children.forEach(function(e){e=t.setTreeValues(e),l.push(e),e.ignore||(n+=e.val)}),stableSort(l,function(e,t){return(e.sortIndex||0)-(t.sortIndex||0)}),d=pick(p&&p.options.value,n),p&&(p.value=d),extend(e,{children:l,childrenTotal:n,ignore:!(pick(p&&p.visible,!0)&&0<d),isLeaf:e.visible&&!n,levelDynamic:e.level-(a?0:s.level),name:pick(p&&p.name,""),sortIndex:pick(p&&p.sortIndex,-d),val:d}),e}sliceAndDice(e,t){return this.algorithmFill(!0,e,t)}squarified(e,t){return this.algorithmLowAspectRatio(!0,e,t)}strip(e,t){return this.algorithmLowAspectRatio(!1,e,t)}stripes(e,t){return this.algorithmFill(!1,e,t)}translate(){let i=this,e=i.options,t=updateRootId(i),o,r,s,a,n;Series.prototype.translate.call(i),a=i.tree=i.getTree(),o=i.nodeMap[t],""===t||o&&o.children.length||(i.setRootNode("",!1),t=i.rootNode,o=i.nodeMap[t]),i.mapOptionsToLevel=getLevelOptions({from:o.level+1,levels:e.levels,to:a.height,defaults:{levelIsConstant:i.options.levelIsConstant,colorByPoint:e.colorByPoint}}),TreemapUtilities.recursive(i.nodeMap[i.rootNode],function(e){let t=!1,o=e.parent;return e.visible=!0,t=!o&&""!==o?t:i.nodeMap[o]}),TreemapUtilities.recursive(i.nodeMap[i.rootNode].children,function(e){let t=!1;return e.forEach(function(e){e.visible=!0,e.children.length&&(t=(t||[]).concat(e.children))}),t}),i.setTreeValues(a),i.axisRatio=i.xAxis.len/i.yAxis.len,i.nodeMap[""].pointValues=r={x:0,y:0,width:TreemapUtilities.AXIS_MAX,height:TreemapUtilities.AXIS_MAX},i.nodeMap[""].values=s=merge(r,{width:r.width*i.axisRatio,direction:"vertical"===e.layoutStartingDirection?0:1,val:a.val}),i.calculateChildrenAreas(a,s),i.colorAxis||e.colorByPoint||i.setColorRecursive(i.tree),e.allowTraversingTree&&(n=o.pointValues,i.xAxis.setExtremes(n.x,n.x+n.width,!1),i.yAxis.setExtremes(n.y,n.y+n.height,!1),i.xAxis.setScale(),i.yAxis.setScale()),i.setPointValues()}}TreemapSeries.defaultOptions=merge(ScatterSeries.defaultOptions,{allowTraversingTree:!1,animationLimit:250,borderRadius:0,showInLegend:!1,marker:void 0,colorByPoint:!1,dataLabels:{defer:!1,enabled:!0,formatter:function(){var e=this&&this.point?this.point:{};return isString(e.name)?e.name:""},inside:!0,verticalAlign:"middle"},tooltip:{headerFormat:"",pointFormat:"<b>{point.name}</b>: {point.value}<br/>"},ignoreHiddenPoint:!0,layoutAlgorithm:"sliceAndDice",layoutStartingDirection:"vertical",alternateStartingDirection:!1,levelIsConstant:!0,traverseUpButton:{position:{align:"right",x:-10,y:10}},borderColor:"#e6e6e6",borderWidth:1,colorKey:"colorValue",opacity:.15,states:{hover:{borderColor:"#999999",brightness:HeatmapSeries?0:.1,halo:!1,opacity:.75,shadow:!1}},legendSymbol:"rectangle"}),extend(TreemapSeries.prototype,{buildKDTree:noop,colorAttribs:ColorMapComposition.seriesMembers.colorAttribs,colorKey:"colorValue",directTouch:!0,getExtremesFromAll:!0,getSymbol:noop,optionalAxis:"colorAxis",parallelArrays:["x","y","value","colorValue"],pointArrayMap:["value"],pointClass:TreemapPoint,NodeClass:TreemapNode,trackerGroups:["group","dataLabelsGroup"],utils:{recursive:TreemapUtilities.recursive}}),ColorMapComposition.compose(TreemapSeries),SeriesRegistry.registerSeriesType("treemap",TreemapSeries);export default TreemapSeries;