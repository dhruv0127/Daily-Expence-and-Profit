"use strict";import ColumnSeries from"../Column/ColumnSeries.js";import H from"../../Core/Globals.js";const noop=H["noop"];import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";import U from"../../Core/Utilities.js";const{extend,merge,pick}=U;class BoxPlotSeries extends ColumnSeries{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}pointAttribs(){return{}}translate(){const t=this,e=t.yAxis,i=t.pointArrayMap;super.translate.apply(t),t.points.forEach(function(o){i.forEach(function(t){null!==o[t]&&(o[t+"Plot"]=e.translate(o[t],0,1,0,1))}),o.plotHigh=o.highPlot})}drawPoints(){let n=this,t=n.points,p=n.options,m=n.chart,f=m.renderer,k,S,c,u,w,y,g,x,b,C,M,W=!1!==n.doQuartiles,P,L=n.options.whiskerLength;t.forEach(function(o){let e=o.graphic,i=e?"animate":"attr",s=o.shapeArgs,r={},a={},l={},h={},d=o.color||n.color;if(void 0!==o.plotY){x=Math.round(s.width),b=Math.floor(s.x),C=b+x,M=Math.round(x/2),k=Math.floor(W?o.q1Plot:o.lowPlot),S=Math.floor(W?o.q3Plot:o.lowPlot),c=Math.floor(o.highPlot),u=Math.floor(o.lowPlot),e||(o.graphic=e=f.g("point").add(n.group),o.stem=f.path().addClass("highcharts-boxplot-stem").add(e),L&&(o.whiskers=f.path().addClass("highcharts-boxplot-whisker").add(e)),W&&(o.box=f.path(void 0).addClass("highcharts-boxplot-box").add(e)),o.medianShape=f.path(void 0).addClass("highcharts-boxplot-median").add(e)),m.styledMode||(a.stroke=o.stemColor||p.stemColor||d,a["stroke-width"]=pick(o.stemWidth,p.stemWidth,p.lineWidth),a.dashstyle=o.stemDashStyle||p.stemDashStyle||p.dashStyle,o.stem.attr(a),L&&(l.stroke=o.whiskerColor||p.whiskerColor||d,l["stroke-width"]=pick(o.whiskerWidth,p.whiskerWidth,p.lineWidth),l.dashstyle=o.whiskerDashStyle||p.whiskerDashStyle||p.dashStyle,o.whiskers.attr(l)),W&&(r.fill=o.fillColor||p.fillColor||d,r.stroke=p.lineColor||d,r["stroke-width"]=p.lineWidth||0,r.dashstyle=o.boxDashStyle||p.boxDashStyle||p.dashStyle,o.box.attr(r)),h.stroke=o.medianColor||p.medianColor||d,h["stroke-width"]=pick(o.medianWidth,p.medianWidth,p.lineWidth),h.dashstyle=o.medianDashStyle||p.medianDashStyle||p.dashStyle,o.medianShape.attr(h));let t;y=o.stem.strokeWidth()%2/2,g=b+M+y,t=[["M",g,S],["L",g,c],["M",g,k],["L",g,u]],o.stem[i]({d:t}),W&&(y=o.box.strokeWidth()%2/2,k=Math.floor(k)+y,S=Math.floor(S)+y,b+=y,C+=y,t=[["M",b,S],["L",b,k],["L",C,k],["L",C,S],["L",b,S],["Z"]],o.box[i]({d:t})),L&&(y=o.whiskers.strokeWidth()%2/2,c+=y,u+=y,P=/%$/.test(L)?M*parseFloat(L)/100:L/2,t=[["M",g-P,c],["L",g+P,c],["M",g-P,u],["L",g+P,u]],o.whiskers[i]({d:t})),w=Math.round(o.medianPlot),y=o.medianShape.strokeWidth()%2/2,w+=y,t=[["M",b,w],["L",C,w]],o.medianShape[i]({d:t})}})}toYData(t){return[t.low,t.q1,t.median,t.q3,t.high]}}BoxPlotSeries.defaultOptions=merge(ColumnSeries.defaultOptions,{threshold:null,tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span> <b>{series.name}</b><br/>Maximum: {point.high}<br/>Upper quartile: {point.q3}<br/>Median: {point.median}<br/>Lower quartile: {point.q1}<br/>Minimum: {point.low}<br/>'},whiskerLength:"50%",fillColor:"#ffffff",lineWidth:1,medianWidth:2,whiskerWidth:2}),extend(BoxPlotSeries.prototype,{pointArrayMap:["low","q1","median","q3","high"],pointValKey:"high",drawDataLabels:noop,setStackedPoints:noop}),SeriesRegistry.registerSeriesType("boxplot",BoxPlotSeries);export default BoxPlotSeries;