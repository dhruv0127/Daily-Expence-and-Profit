"use strict";import CU from"../CenteredUtilities.js";const getStartAndEndRadians=CU["getStartAndEndRadians"];import ColumnSeries from"../Column/ColumnSeries.js";import H from"../../Core/Globals.js";const noop=H["noop"];import PiePoint from"./PiePoint.js";import PieSeriesDefaults from"./PieSeriesDefaults.js";import Series from"../../Core/Series/Series.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";import Symbols from"../../Core/Renderer/SVG/Symbols.js";import U from"../../Core/Utilities.js";const{clamp,extend,fireEvent,merge,pick,relativeLength}=U;class PieSeries extends Series{constructor(){super(...arguments),this.center=void 0,this.data=void 0,this.maxLabelDistance=void 0,this.options=void 0,this.points=void 0}animate(e){const a=this,t=a.points,r=a.startAngleRad;e||t.forEach(function(e){const t=e.graphic,i=e.shapeArgs;t&&i&&(t.attr({r:pick(e.startR,a.center&&a.center[3]/2),start:r,end:r}),t.animate({r:i.r,start:i.start,end:i.end},a.options.animation))})}drawEmpty(){var e,t,i=this.startAngleRad,a=this.endAngleRad,r=this.options;0===this.total&&this.center?(e=this.center[0],t=this.center[1],this.graph||(this.graph=this.chart.renderer.arc(e,t,this.center[1]/2,0,i,a).addClass("highcharts-empty-series").add(this.group)),this.graph.attr({d:Symbols.arc(e,t,this.center[2]/2,0,{start:i,end:a,innerR:this.center[3]/2})}),this.chart.styledMode||this.graph.attr({"stroke-width":r.borderWidth,fill:r.fillColor||"none",stroke:r.color||"#cccccc"})):this.graph&&(this.graph=this.graph.destroy())}drawPoints(){const t=this.chart.renderer;this.points.forEach(function(e){e.graphic&&e.hasNewShapeType()&&(e.graphic=e.graphic.destroy()),e.graphic||(e.graphic=t[e.shapeType](e.shapeArgs).add(e.series.group),e.delayedRendering=!0)})}generatePoints(){super.generatePoints(),this.updateTotals()}getX(e,t,i){var a=this.center,r=this.radii?this.radii[i.index]||0:a[2]/2,e=Math.asin(clamp((e-a[1])/(r+i.labelDistance),-1,1));return a[0]+(t?-1:1)*(Math.cos(e)*(r+i.labelDistance))+(0<i.labelDistance?(t?-1:1)*this.options.dataLabels.padding:0)}hasData(){return!!this.processedXData.length}redrawPoints(){const i=this,a=i.chart;let r,s,n,o;this.drawEmpty(),i.group&&!a.styledMode&&i.group.shadow(i.options.shadow),i.points.forEach(function(e){var t={};s=e.graphic,!e.isNull&&s?(o=e.shapeArgs,r=e.getTranslate(),a.styledMode||(n=i.pointAttribs(e,e.selected&&"select")),e.delayedRendering?(s.setRadialReference(i.center).attr(o).attr(r),a.styledMode||s.attr(n).attr({"stroke-linejoin":"round"}),e.delayedRendering=!1):(s.setRadialReference(i.center),a.styledMode||merge(!0,t,n),merge(!0,t,o,r),s.animate(t)),s.attr({visibility:e.visible?"inherit":"hidden"}),s.addClass(e.getClassName(),!0)):s&&(e.graphic=s.destroy())})}sortByAngle(e,i){e.sort(function(e,t){return void 0!==e.angle&&(t.angle-e.angle)*i})}translate(e){fireEvent(this,"translate"),this.generatePoints();var t=this,i=1e3,a=t.options,r=a.slicedOffset,s=r+(a.borderWidth||0),n=getStartAndEndRadians(a.startAngle,a.endAngle),o=t.startAngleRad=n.start,l=(t.endAngleRad=n.end)-o,d=t.points,h=a.dataLabels.distance,c=a.ignoreHiddenPoint,p=d.length;let g,m,u,f,y,b,S,P,M=0;for(e||(t.center=e=t.getCenter()),S=0;S<p;S++){P=d[S],m=o+M*l,!P.isValid()||c&&!P.visible||(M+=P.percentage/100),u=o+M*l;var v={x:e[0],y:e[1],r:e[2]/2,innerR:e[3]/2,start:Math.round(m*i)/i,end:Math.round(u*i)/i};P.shapeType="arc",P.shapeArgs=v,P.labelDistance=pick(P.options.dataLabels&&P.options.dataLabels.distance,h),P.labelDistance=relativeLength(P.labelDistance,v.r),t.maxLabelDistance=Math.max(t.maxLabelDistance||0,P.labelDistance),(f=(u+m)/2)>1.5*Math.PI?f-=2*Math.PI:f<-Math.PI/2&&(f+=2*Math.PI),P.slicedTranslation={translateX:Math.round(Math.cos(f)*r),translateY:Math.round(Math.sin(f)*r)},y=Math.cos(f)*e[2]/2,b=Math.sin(f)*e[2]/2,P.tooltipPos=[e[0]+.7*y,e[1]+.7*b],P.half=f<-Math.PI/2||f>Math.PI/2?1:0,P.angle=f,g=Math.min(s,P.labelDistance/5),P.labelPosition={natural:{x:e[0]+y+Math.cos(f)*P.labelDistance,y:e[1]+b+Math.sin(f)*P.labelDistance},computed:{},alignment:P.labelDistance<0?"center":P.half?"right":"left",connectorPosition:{breakAt:{x:e[0]+y+Math.cos(f)*g,y:e[1]+b+Math.sin(f)*g},touchingSliceAt:{x:e[0]+y,y:e[1]+b}}}}fireEvent(t,"afterTranslate")}updateTotals(){var e=this.points,t=e.length,i=this.options.ignoreHiddenPoint;let a,r,s=0;for(a=0;a<t;a++)!(r=e[a]).isValid()||i&&!r.visible||(s+=r.y);for(this.total=s,a=0;a<t;a++)(r=e[a]).percentage=0<s&&(r.visible||!i)?r.y/s*100:0,r.total=s}}PieSeries.defaultOptions=merge(Series.defaultOptions,PieSeriesDefaults),extend(PieSeries.prototype,{axisTypes:[],directTouch:!0,drawGraph:void 0,drawTracker:ColumnSeries.prototype.drawTracker,getCenter:CU.getCenter,getSymbol:noop,isCartesian:!1,noSharedTooltip:!0,pointAttribs:ColumnSeries.prototype.pointAttribs,pointClass:PiePoint,requireSorting:!1,searchPoint:noop,trackerGroups:["group","dataLabelsGroup"]}),SeriesRegistry.registerSeriesType("pie",PieSeries);export default PieSeries;