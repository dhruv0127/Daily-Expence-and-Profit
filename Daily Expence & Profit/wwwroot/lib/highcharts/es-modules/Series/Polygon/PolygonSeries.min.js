"use strict";import H from"../../Core/Globals.js";const noop=H["noop"];import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{series:Series,seriesTypes:{area:AreaSeries,line:LineSeries,scatter:ScatterSeries}}=SeriesRegistry;import U from"../../Core/Utilities.js";const{extend,merge}=U;import"../../Core/Legend/Legend.js";class PolygonSeries extends ScatterSeries{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}getGraphPath(){let e=LineSeries.prototype.getGraphPath.call(this),r=e.length+1;for(;r--;)(r===e.length||"M"===e[r][0])&&0<r&&e.splice(r,0,["Z"]);return this.areaPath=e}drawGraph(){this.options.fillColor=this.color,AreaSeries.prototype.drawGraph.call(this)}}PolygonSeries.defaultOptions=merge(ScatterSeries.defaultOptions,{marker:{enabled:!1,states:{hover:{enabled:!1}}},stickyTracking:!1,tooltip:{followPointer:!0,pointFormat:""},trackByArea:!0,legendSymbol:"rectangle"}),extend(PolygonSeries.prototype,{type:"polygon",drawTracker:Series.prototype.drawTracker,setStackedPoints:noop}),SeriesRegistry.registerSeriesType("polygon",PolygonSeries);export default PolygonSeries;