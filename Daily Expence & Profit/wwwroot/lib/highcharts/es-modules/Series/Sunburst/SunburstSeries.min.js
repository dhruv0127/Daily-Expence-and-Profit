"use strict";import CU from"../CenteredUtilities.js";const{getCenter,getStartAndEndRadians}=CU;import H from"../../Core/Globals.js";const noop=H["noop"];import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{series:Series,seriesTypes:{column:ColumnSeries,treemap:TreemapSeries}}=SeriesRegistry;import SunburstPoint from"./SunburstPoint.js";import SunburstUtilities from"./SunburstUtilities.js";import TU from"../TreeUtilities.js";const{getColor,getLevelOptions,setTreeValues,updateRootId}=TU;import U from"../../Core/Utilities.js";import SunburstNode from"./SunburstNode.js";const{defined,error,extend,fireEvent,isNumber,isObject,isString,merge,splat}=U,rad2deg=180/Math.PI;function isBoolean(e){return"boolean"==typeof e}const getEndPoint=function(e,t,i,r){return{x:e+Math.cos(i)*r,y:t+Math.sin(i)*r}};function getDlOptions(e){let t=e.point,i=isObject(e.shapeArgs)?e.shapeArgs:{},r=isObject(e.optionsPoint)?e.optionsPoint.dataLabels:{},s=splat(isObject(e.level)?e.level.dataLabels:{})[0],o=merge({style:{}},s,r),a,n,l=o.rotationMode;return isNumber(o.rotation)||("auto"!==l&&"circular"!==l||(t.innerArcLength<1&&t.outerArcLength>i.radius?(a=0,t.dataLabelPath&&"circular"===l&&(o.textPath={enabled:!0})):1<t.innerArcLength&&t.outerArcLength>1.5*i.radius?"circular"===l?o.textPath={enabled:!0,attributes:{dy:5}}:l="parallel":(t.dataLabel&&t.dataLabel.textPath&&"circular"===l&&(o.textPath={enabled:!1}),l="perpendicular")),"auto"!==l&&"circular"!==l&&(t.dataLabel&&t.dataLabel.textPath&&(o.textPath={enabled:!1}),a=i.end-(i.end-i.start)/2),"parallel"===l?o.style.width=Math.min(2.5*i.radius,(t.outerArcLength+t.innerArcLength)/2):!defined(o.style.width)&&i.radius&&(o.style.width=1===t.node.level?2*i.radius:i.radius),"perpendicular"===l&&t.outerArcLength<16&&(o.style.width=1),o.style.width=Math.max(o.style.width-2*(o.padding||0),1),n=a*rad2deg%180,"parallel"===l&&(n-=90),90<n?n-=180:n<-90&&(n+=180),o.rotation=n),o.textPath&&(0===t.shapeExisting.innerR&&o.textPath.enabled?(o.rotation=0,o.textPath.enabled=!1,o.style.width=Math.max(2*t.shapeExisting.r-2*(o.padding||0),1)):t.dlOptions&&t.dlOptions.textPath&&!t.dlOptions.textPath.enabled&&"circular"===l&&(o.textPath.enabled=!0),o.textPath.enabled&&(o.rotation=0,o.style.width=Math.max((t.outerArcLength+t.innerArcLength)/2-2*(o.padding||0),1))),0===o.rotation&&(o.rotation=.001),o}function getAnimation(e,t){let i=t.point,r=t.radians,s=t.innerR,o=t.idRoot,a=t.idPreviousRoot,n=t.shapeExisting,l=t.shapeRoot,d=t.shapePreviousRoot,p=t.visible,u={},c={end:e.end,start:e.start,innerR:e.innerR,r:e.r,x:e.x,y:e.y};return p?!i.graphic&&d&&((u=o===i.id?{start:r.start,end:r.end}:d.end<=e.start?{start:r.end,end:r.end}:{start:r.start,end:r.start}).innerR=u.r=s):i.graphic&&(a===i.id?c={innerR:s,r:s}:l&&(c=l.end<=n.start?{innerR:s,r:s,start:r.end,end:r.end}:{innerR:s,r:s,start:r.start,end:r.start})),{from:u,to:c}}function getDrillId(e,t,i){let r,s=e.node;return r=s.isLeaf?r:t===e.id?i[t].parent:e.id}function cbSetTreeValuesBefore(e,t){const i=t.mapIdToNode,r=e.parent,s=r?i[r]:void 0,o=t.series,a=o.chart,n=o.points,l=n[e.i],d=o.options.colors||a&&a.options.colors,p=getColor(e,{colors:d,colorIndex:o.colorIndex,index:t.index,mapOptionsToLevel:t.mapOptionsToLevel,parentColor:s&&s.color,parentColorIndex:s&&s.colorIndex,series:t.series,siblings:t.siblings});return e.color=p.color,e.colorIndex=p.colorIndex,l&&(l.color=e.color,l.colorIndex=e.colorIndex,e.sliced=e.id!==t.idRoot&&l.sliced),e}class SunburstSeries extends TreemapSeries{constructor(){super(...arguments),this.center=void 0,this.data=void 0,this.mapOptionsToLevel=void 0,this.nodeMap=void 0,this.options=void 0,this.points=void 0,this.shapeRoot=void 0,this.startAndEndRadians=void 0,this.tree=void 0}alignDataLabel(e,t,i){if(!i.textPath||!i.textPath.enabled)return super.alignDataLabel.apply(this,arguments)}animate(e){let t=this.chart,i=[t.plotWidth/2,t.plotHeight/2],r=t.plotLeft,s=t.plotTop,o,a=this.group;e?(o={translateX:i[0]+r,translateY:i[1]+s,scaleX:.001,scaleY:.001,rotation:10,opacity:.01},a.attr(o)):(o={translateX:r,translateY:s,scaleX:1,scaleY:1,rotation:0,opacity:1},a.animate(o,this.options.animation))}drawPoints(){let l=this,d=l.mapOptionsToLevel,p=l.shapeRoot,u=l.group,c=l.hasRendered,h=l.rootNode,g=l.idPreviousRoot,b=l.nodeMap,e=b[g],v=e&&e.shapeArgs,t=l.points,m=l.startAndEndRadians,f=l.chart,i=f&&f.options&&f.options.chart||{},x=!isBoolean(i.animation)||i.animation,r=l.center,S={x:r[0],y:r[1]},y=r[3]/2,R=l.chart.renderer,L,s=!1,A=!1,o=!!(x&&c&&h!==g&&l.dataLabelsGroup);o&&(l.dataLabelsGroup.attr({opacity:0}),L=function(){const e=l;s=!0,e.dataLabelsGroup&&e.dataLabelsGroup.animate({opacity:1,visibility:"inherit"})}),t.forEach(function(e){let t=e.node,i=d[t.level],r=e.shapeExisting||{},s=t.shapeArgs||{},o,a,n=!(!t.visible||!t.shapeArgs);s.borderRadius=l.options.borderRadius,o=c&&x?getAnimation(s,{center:S,point:e,radians:m,innerR:y,idRoot:h,idPreviousRoot:g,shapeExisting:r,shapeRoot:p,shapePreviousRoot:v,visible:n}):{to:s,from:{}},extend(e,{shapeExisting:s,tooltipPos:[s.plotX,s.plotY],drillId:getDrillId(e,h,b),name:""+(e.name||e.id||e.index),plotX:s.plotX,plotY:s.plotY,value:t.val,isInside:n,isNull:!n}),e.dlOptions=getDlOptions({point:e,level:i,optionsPoint:e.options,shapeArgs:s}),!A&&n&&(A=!0,a=L),e.draw({animatableAttribs:o.to,attribs:extend(o.from,!f.styledMode&&l.pointAttribs(e,e.selected&&"select")),onComplete:a,group:u,renderer:R,shapeType:"arc",shapeArgs:s})}),o&&A?(l.hasRendered=!1,l.options.dataLabels.defer=!0,Series.prototype.drawDataLabels.call(l),l.hasRendered=!0,s&&L()):Series.prototype.drawDataLabels.call(l),l.idPreviousRoot=h}layoutAlgorithm(e,t,i){let s=e.start,o=e.end-s,a=e.val,n=e.x,l=e.y,d=i&&isObject(i.levelSize)&&isNumber(i.levelSize.value)?i.levelSize.value:0,p=e.r,u=p+d,c=i&&isNumber(i.slicedOffset)?i.slicedOffset:0;return(t||[]).reduce(function(e,t){var i=1/a*t.val*o,r=s+i/2,r=getEndPoint(n,l,r,c),t={x:t.sliced?r.x:n,y:t.sliced?r.y:l,innerR:p,r:u,radius:d,start:s,end:s+i};return e.push(t),s=t.end,e},[])}setRootNode(e,t,i){if(1===this.nodeMap[e].level&&1===this.nodeList.filter(e=>1===e.level).length){if(""===this.idPreviousRoot)return;e=""}super.setRootNode(e,t,i)}setShapeArgs(e,t,a){let n,i=e.level+1,r=a[i],s=e.children.filter(function(e){return e.visible});n=this.layoutAlgorithm(t,s,r),s.forEach(function(e,t){var t=n[t],i=t.start+(t.end-t.start)/2,r=t.innerR+(t.r-t.innerR)/2,s=t.end-t.start,r=0===t.innerR&&6.28<s?{x:t.x,y:t.y}:getEndPoint(t.x,t.y,i,r),o=!e.val||e.childrenTotal>e.val?e.childrenTotal:e.val;this.points[e.i]&&(this.points[e.i].innerArcLength=s*t.innerR,this.points[e.i].outerArcLength=s*t.r),e.shapeArgs=merge(t,{plotX:r.x,plotY:r.y+4*Math.abs(Math.cos(i))}),e.values=merge(t,{val:o}),e.children.length&&this.setShapeArgs(e,e.values,a)},this)}translate(){let t=this,e=t.options,i=t.center=t.getCenter(),r=t.startAndEndRadians=getStartAndEndRadians(e.startAngle,e.endAngle),s=i[3]/2,o=i[2]/2,a=o-s,n=updateRootId(t),l=t.nodeMap,d,p,u=l&&l[n],c,h,g,b={};t.shapeRoot=u&&u.shapeArgs,this.processedXData||this.processData(),this.generatePoints(),fireEvent(this,"afterTranslate"),h=t.tree=t.getTree(),l=t.nodeMap,u=l[n],p=isString(u.parent)?u.parent:"",c=l[p];var{from:v,to:m}=SunburstUtilities.getLevelFromAndTo(u);d=getLevelOptions({from:v,levels:t.options.levels,to:m,defaults:{colorByPoint:e.colorByPoint,dataLabels:e.dataLabels,levelIsConstant:e.levelIsConstant,levelSize:e.levelSize,slicedOffset:e.slicedOffset}}),d=SunburstUtilities.calculateLevelSizes(d,{diffRadius:a,from:v,to:m}),setTreeValues(h,{before:cbSetTreeValuesBefore,idRoot:n,levelIsConstant:e.levelIsConstant,mapOptionsToLevel:d,mapIdToNode:l,points:t.points,series:t}),g=l[""].shapeArgs={end:r.end,r:s,start:r.start,val:u.val,x:i[0],y:i[1]},this.setShapeArgs(c,g,d),t.mapOptionsToLevel=d,t.data.forEach(function(e){b[e.id]&&error(31,!1,t.chart),b[e.id]=!0}),b={}}}SunburstSeries.defaultOptions=merge(TreemapSeries.defaultOptions,{center:["50%","50%"],clip:!1,colorByPoint:!1,opacity:1,dataLabels:{allowOverlap:!0,defer:!0,rotationMode:"circular",style:{textOverflow:"ellipsis"}},rootId:void 0,levelIsConstant:!0,levelSize:{value:1,unit:"weight"},slicedOffset:10}),extend(SunburstSeries.prototype,{axisTypes:[],drawDataLabels:noop,getCenter:getCenter,isCartesian:!1,onPointSupported:!0,pointAttribs:ColumnSeries.prototype.pointAttribs,pointClass:SunburstPoint,NodeClass:SunburstNode,utils:SunburstUtilities}),SeriesRegistry.registerSeriesType("sunburst",SunburstSeries);export default SunburstSeries;