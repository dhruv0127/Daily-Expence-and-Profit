"use strict";import Color from"../Color/Color.js";const color=Color["parse"];import U from"../Utilities.js";const{extend,merge}=U;var SolidGaugeAxis;!function(o){const t={initDataClasses:function(i){let l=this.chart,r,a=0,e=this.options;this.dataClasses=r=[],i.dataClasses.forEach(function(o,t){var s;o=merge(o),r.push(o),o.color||("category"===e.dataClassColor?(s=l.options.colors,o.color=s[a++],a===s.length&&(a=0)):o.color=color(e.minColor).tweenTo(color(e.maxColor),t/(i.dataClasses.length-1)))})},initStops:function(o){this.stops=o.stops||[[0,this.options.minColor],[1,this.options.maxColor]],this.stops.forEach(function(o){o.color=color(o[1])})},toColor:function(o,t){let s,i=this.stops,l,r,a,e=this.dataClasses,n,c;if(e){for(c=e.length;c--;)if(n=e[c],l=n.from,r=n.to,(void 0===l||o>=l)&&(void 0===r||o<=r)){a=n.color,t&&(t.dataClass=c);break}}else{for(this.logarithmic&&(o=this.val2lin(o)),s=1-(this.max-o)/(this.max-this.min),c=i.length;c--&&!(s>i[c][0]););l=i[c]||i[c+1],r=i[c+1]||l,s=1-(r[0]-s)/(r[0]-l[0]||1),a=l.color.tweenTo(r.color,s)}return a}};o.init=function(o){extend(o,t)}}(SolidGaugeAxis=SolidGaugeAxis||{});export default SolidGaugeAxis;