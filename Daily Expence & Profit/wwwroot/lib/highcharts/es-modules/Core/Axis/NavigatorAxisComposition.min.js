"use strict";import H from"../Globals.js";const isTouchDevice=H["isTouchDevice"];import U from"../Utilities.js";const{addEvent,correctFloat,defined,isNumber,pick}=U,composedMembers=[];function onAxisInit(){var i=this;i.navigatorAxis||(i.navigatorAxis=new NavigatorAxisAdditions(i))}function onAxisZoom(i){const o=this,e=o.chart,t=e.options,s=t.navigator,n=o.navigatorAxis,a=t.chart.zooming.pinchType,r=t.rangeSelector,c=t.chart.zooming.type;var d;o.isXAxis&&(s&&s.enabled||r&&r.enabled)&&("y"===c?i.zoomed=!1:(!isTouchDevice&&"xy"===c||isTouchDevice&&"xy"===a)&&o.options.range&&(d=n.previousZoom,defined(i.newMin)?n.previousZoom=[o.min,o.max]:d&&(i.newMin=d[0],i.newMax=d[1],n.previousZoom=void 0))),void 0!==i.zoomed&&i.preventDefault()}class NavigatorAxisAdditions{static compose(i){U.pushUnique(composedMembers,i)&&(i.keepProps.push("navigatorAxis"),addEvent(i,"init",onAxisInit),addEvent(i,"zoom",onAxisZoom))}constructor(i){this.axis=i}destroy(){this.axis=void 0}toFixedRange(i,o,e,t){const s=this.axis,n=s.chart;let a=pick(e,s.translate(i,!0,!s.horiz)),r=pick(t,s.translate(o,!0,!s.horiz));var i=n&&n.fixedRange,o=(s.pointRange||0)/2,c=i&&(r-a)/i;return defined(e)||(a=correctFloat(a+o)),defined(t)||(r=correctFloat(r-o)),.7<c&&c<1.3&&(t?a=r-i:r=a+i),{min:a=isNumber(a)&&isNumber(r)?a:r=void 0,max:r}}}export default NavigatorAxisAdditions;