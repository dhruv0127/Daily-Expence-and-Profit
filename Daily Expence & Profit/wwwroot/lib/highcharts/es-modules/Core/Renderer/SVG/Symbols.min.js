"use strict";import U from"../../Utilities.js";const{defined,isNumber,pick}=U;function arc(t,r,c,e,i){const o=[];if(i){var a=i.start||0,L=pick(i.r,c),e=pick(i.r,e||c),c=.001,s=Math.abs((i.end||0)-a-2*Math.PI)<c,u=(i.end||0)-c,l=i.innerR,s=pick(i.open,s),d=Math.cos(a),p=Math.sin(a),M=Math.cos(u),h=Math.sin(u),c=pick(i.longArc,u-a-Math.PI<c?0:1);let n=["A",L,e,0,c,pick(i.clockwise,1),t+L*M,r+e*h];n.params={start:a,end:u,cx:t,cy:r},o.push(["M",t+L*d,r+e*p],n),defined(l)&&((n=["A",l,l,0,c,defined(i.clockwise)?1-i.clockwise:0,t+l*d,r+l*p]).params={start:u,end:a,cx:t,cy:r},o.push(s?["M",t+l*M,r+l*h]:["L",t+l*M,r+l*h],n)),s||o.push(["Z"])}return o}function callout(n,t,r,c,e){var i=Math.min(e&&e.r||0,r,c),o=i+6,a=e&&e.anchorX,e=e&&e.anchorY||0;const L=roundedRect(n,t,r,c,{r:i});return isNumber(a)&&(r<=n+a?t+o<e&&e<t+c-o?L.splice(3,1,["L",n+r,e-6],["L",n+r+6,e],["L",n+r,e+6],["L",n+r,t+c-i]):L.splice(3,1,["L",n+r,c/2],["L",a,e],["L",n+r,c/2],["L",n+r,t+c-i]):n+a<=0?t+o<e&&e<t+c-o?L.splice(7,1,["L",n,e+6],["L",n-6,e],["L",n,e-6],["L",n,t+i]):L.splice(7,1,["L",n,c/2],["L",a,e],["L",n,c/2],["L",n,t+i]):e&&c<e&&n+o<a&&a<n+r-o?L.splice(5,1,["L",a+6,t+c],["L",a,t+c+6],["L",a-6,t+c],["L",n+i,t+c]):e&&e<0&&n+o<a&&a<n+r-o&&L.splice(1,1,["L",a-6,t],["L",a,t-6],["L",a+6,t],["L",r-i,t])),L}function circle(n,t,r,c){return arc(n+r/2,t+c/2,r/2,c/2,{start:.5*Math.PI,end:2.5*Math.PI,open:!1})}function diamond(n,t,r,c){return[["M",n+r/2,t],["L",n+r,t+c/2],["L",n+r/2,t+c],["L",n,t+c/2],["Z"]]}function rect(n,t,r,c,e){return e&&e.r?roundedRect(n,t,r,c,e):[["M",n,t],["L",n+r,t],["L",n+r,t+c],["L",n,t+c],["Z"]]}function roundedRect(n,t,r,c,e){e=(null==e?void 0:e.r)||0;return[["M",n+e,t],["L",n+r-e,t],["A",e,e,0,0,1,n+r,t+e],["L",n+r,t+c-e],["A",e,e,0,0,1,n+r-e,t+c],["L",n+e,t+c],["A",e,e,0,0,1,n,t+c-e],["L",n,t+e],["A",e,e,0,0,1,n+e,t],["Z"]]}function triangle(n,t,r,c){return[["M",n+r/2,t],["L",n+r,t+c],["L",n,t+c],["Z"]]}function triangleDown(n,t,r,c){return[["M",n,t],["L",n+r,t],["L",n+r/2,t+c],["Z"]]}const Symbols={arc:arc,callout:callout,circle:circle,diamond:diamond,rect:rect,roundedRect:roundedRect,square:rect,triangle:triangle,"triangle-down":triangleDown};export default Symbols;