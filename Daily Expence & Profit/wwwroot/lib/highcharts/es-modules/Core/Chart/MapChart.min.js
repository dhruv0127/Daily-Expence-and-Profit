"use strict";import Chart from"./Chart.js";import D from"../Defaults.js";const getOptions=D["getOptions"];import SVGRenderer from"../Renderer/SVG/SVGRenderer.js";import U from"../Utilities.js";const{merge,pick}=U;import"../../Maps/MapSymbols.js";class MapChart extends Chart{init(t,e){var r=getOptions().credits,r=merge({chart:{panning:{enabled:!0,type:"xy"},type:"map"},credits:{mapText:pick(r.mapText,' Â© <a href="{geojson.copyrightUrl}">{geojson.copyrightShort}</a>'),mapTextFull:pick(r.mapTextFull,"{geojson.copyright}")},mapView:{},tooltip:{followTouchMove:!1}},t);super.init(r,e)}}!function(p){p.maps={},p.mapChart=function(t,e,r){return new p(t,e,r)},p.splitPath=function(t){let e;if("string"==typeof t){const r=(t=t.replace(/([A-Za-z])/g," $1 ").replace(/^\s*/,"").replace(/\s*$/,"")).split(/[ ,;]+/);e=r.map(t=>/[A-za-z]/.test(t)?t:parseFloat(t))}else e=t;return SVGRenderer.prototype.pathToSegments(e)}}(MapChart=MapChart||{});export default MapChart;