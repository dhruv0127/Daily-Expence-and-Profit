"use strict";import AxisResizerDefaults from"./AxisResizerDefaults.js";import H from"../../Core/Globals.js";const hasTouch=H["hasTouch"];import U from"../../Core/Utilities.js";const{addEvent,clamp,isNumber,merge,objectEach,relativeLength,wrap}=U;class AxisResizer{constructor(t){this.axis=void 0,this.controlLine=void 0,this.lastPos=void 0,this.options=void 0,this.init(t)}init(t,e){this.axis=t,this.options=t.options.resize,this.render(),e||this.addMouseEvents()}render(){const t=this,e=t.axis,s=e.chart,o=t.options,i=o.x||0,n=o.y,r=clamp(e.top+e.height+n,s.plotTop,s.plotTop+s.plotHeight);let a={};s.styledMode||(a={cursor:o.cursor,stroke:o.lineColor,"stroke-width":o.lineWidth,dashstyle:o.lineDashStyle}),t.lastPos=r-n,t.controlLine||(t.controlLine=s.renderer.path().addClass("highcharts-axis-resizer")),t.controlLine.add(e.axisGroup);var h=s.styledMode?t.controlLine.strokeWidth():o.lineWidth;a.d=s.renderer.crispLine([["M",e.left+i,r],["L",e.left+e.width+i,r]],h),t.controlLine.attr(a)}addMouseEvents(){const e=this,t=e.controlLine.element,s=e.axis.chart.container,o=[];var i,n,r;e.mouseMoveHandler=i=function(t){e.onMouseMove(t)},e.mouseUpHandler=n=function(t){e.onMouseUp(t)},e.mouseDownHandler=r=function(t){e.onMouseDown(t)},o.push(addEvent(s,"mousemove",i),addEvent(s.ownerDocument,"mouseup",n),addEvent(t,"mousedown",r)),hasTouch&&o.push(addEvent(s,"touchmove",i),addEvent(s.ownerDocument,"touchend",n),addEvent(t,"touchstart",r)),e.eventsToUnbind=o}onMouseMove(t){t.touches&&0===t.touches[0].pageX||this.grabbed&&(this.hasDragged=!0,this.updateAxes(this.axis.chart.pointer.normalize(t).chartY-this.options.y))}onMouseUp(t){this.hasDragged&&this.updateAxes(this.axis.chart.pointer.normalize(t).chartY-this.options.y),this.grabbed=this.hasDragged=this.axis.chart.activeResizer=null}onMouseDown(t){this.axis.chart.pointer.reset(!1,0),this.grabbed=this.axis.chart.activeResizer=!0}updateAxes(a){function h(t){return 100*t/x+"%"}function d(t,e,s){return Math.round(clamp(t,e,s))}const c=this,l=c.axis.chart,t=c.options.controlledAxis,e=0===t.next.length?[l.yAxis.indexOf(c.axis)+1]:t.next,s=[c.axis].concat(t.prev),u=[],p=l.plotTop,x=l.plotHeight,v=p+x;a=clamp(a,p,v);let m=!1,g=a-c.lastPos;g*g<1||([s,e].forEach((t,r)=>{t.forEach((t,e)=>{var s,o,e=isNumber(t)?l.yAxis[t]:r||e?l.get(t):t,t=e&&e.options;let i,n;t&&"navigator-y-axis"!==t.id&&(n=e.top,s=Math.round(relativeLength(t.minLength,x)),t=Math.round(relativeLength(t.maxLength,x)),r?(g=a-c.lastPos,i=d(e.len-g,s,t),(n=e.top+g)+i>v&&(o=v-i-n,a+=o,n+=o),(i=n<p&&(n=p)+i>v?x:i)===s&&(m=!0),u.push({axis:e,options:{top:h(n-p),height:h(i)}})):((i=d(a-n,s,t))===t&&(m=!0),a=n+i,u.push({axis:e,options:{height:h(i)}})),i)})}),m||(u.forEach(function(t){t.axis.update(t.options,!1)}),l.redraw(!1)))}destroy(){const s=this,t=s.axis;delete t.resizer,this.eventsToUnbind&&this.eventsToUnbind.forEach(function(t){t()}),s.controlLine.destroy(),objectEach(s,function(t,e){s[e]=null})}}AxisResizer.resizerOptions=AxisResizerDefaults;export default AxisResizer;