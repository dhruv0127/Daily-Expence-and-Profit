"use strict";import Axis from"../Core/Axis/Axis.js";import Chart from"../Core/Chart/Chart.js";import U from"../Core/Utilities.js";const{addEvent,defined,isNumber,pick}=U;addEvent(Axis,"afterSetOptions",function(){var t=this.chart.options.chart;!this.horiz&&isNumber(this.options.staticScale)&&(!t.height||t.scrollablePlotArea&&t.scrollablePlotArea.minHeight)&&(this.staticScale=this.options.staticScale)}),Chart.prototype.adjustHeight=function(){"adjustHeight"!==this.redrawTrigger&&((this.axes||[]).forEach(function(t){let e=t.chart,i=!!e.initiatedScale&&e.options.animation,r=t.options.staticScale,a,s;t.staticScale&&defined(t.min)&&(a=pick(t.brokenAxis&&t.brokenAxis.unitLength,t.max+t.tickInterval-t.min)*r,s=(a=Math.max(a,r))-e.plotHeight,!e.scrollablePixelsY&&1<=Math.abs(s)&&(e.plotHeight=a,e.redrawTrigger="adjustHeight",e.setSize(void 0,e.chartHeight+s,i)),t.series.forEach(function(t){const i=t.sharedClipKey&&e.sharedClips[t.sharedClipKey];i&&i.attr(e.inverted?{width:e.plotHeight}:{height:e.plotHeight})}))}),this.initiatedScale=!0),this.redrawTrigger=null},addEvent(Chart,"render",Chart.prototype.adjustHeight);