"use strict";import U from"../Core/Utilities.js";const{extend,isNumber,pick}=U,getListOfParents=function(e,r){const i=e.reduce(function(e,t){var n=pick(t.parent,"");return void 0===e[n]&&(e[n]=[]),e[n].push(t),e},{}),t=Object.keys(i);return t.forEach(function(e,t){const n=i[e];""!==e&&-1===r.indexOf(e)&&(n.forEach(function(e){t[""].push(e)}),delete t[e])}),i},getNode=function(r,e,i,t,o,s){let u=0,c=0,n=s&&s.after,d=s&&s.before,a={data:t,depth:i-1,id:r,level:i,parent:e},f,p,g;return"function"==typeof d&&d(a,s),g=(o[r]||[]).map(function(e){var t=getNode(e.id,r,i+1,e,o,s),n=e.start,e=!0===e.milestone?n:e.end;return f=!isNumber(f)||n<f?n:f,p=!isNumber(p)||e>p?e:p,u=u+1+t.descendants,c=Math.max(t.height+1,c),t}),t&&(t.start=pick(t.start,f),t.end=pick(t.end,p)),extend(a,{children:g,descendants:u,height:c}),"function"==typeof n&&n(a,s),a},getTree=function(e,t){var n=e.map(function(e){return e.id}),e=getListOfParents(e,n);return getNode("",null,1,null,e,t)},Tree={getListOfParents:getListOfParents,getNode:getNode,getTree:getTree};export default Tree;