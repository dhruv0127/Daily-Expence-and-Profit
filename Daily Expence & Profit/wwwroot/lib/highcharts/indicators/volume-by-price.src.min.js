!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/indicators/volume-by-price",["highcharts","highcharts/modules/stock"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){"use strict";e=e?e._modules:{};function t(e,t,o,s){e.hasOwnProperty(t)||(e[t]=s.apply(null,o),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:t,module:e[t]}})))}t(e,"Stock/Indicators/VBP/VBPPoint.js",[e["Core/Series/SeriesRegistry.js"]],function(e){var{pointClass:e}=e.seriesTypes["sma"]["prototype"];class t extends e{destroy(){this.negativeGraphic&&(this.negativeGraphic=this.negativeGraphic.destroy()),super.destroy.apply(this,arguments)}}return t}),t(e,"Stock/Indicators/VBP/VBPIndicator.js",[e["Stock/Indicators/VBP/VBPPoint.js"],e["Core/Animation/AnimationUtilities.js"],e["Core/Globals.js"],e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"],e["Core/Chart/StockChart.js"]],function(e,t,o,s,i,a){const n=t["animObject"];t=o.noop;const{column:{prototype:V},sma:r}=s.seriesTypes,{addEvent:l,arrayMax:D,arrayMin:g,correctFloat:x,defined:f,error:u,extend:d,isArray:c,merge:p}=i,P=Math.abs;class h extends r{constructor(){super(...arguments),this.data=void 0,this.negWidths=void 0,this.options=void 0,this.points=void 0,this.posWidths=void 0,this.priceZones=void 0,this.rangeStep=void 0,this.volumeDataArray=void 0,this.zoneStarts=void 0,this.zoneLinesSVG=void 0}init(o){const s=this,i=(super.init.apply(s,arguments),l(a,"afterLinkSeries",function(){var e,t;s.options&&(t=s.options.params,e=s.linkedParent,t=o.get(t.volumeSeriesID),s.addCustomEvents(e,t)),i()},{order:1}));return s}addCustomEvents(e,t){const o=this,s=()=>{o.chart.redraw(),o.setData([]),o.zoneStarts=[],o.zoneLinesSVG&&(o.zoneLinesSVG=o.zoneLinesSVG.destroy())};return o.dataEventsToUnbind.push(l(e,"remove",function(){s()})),t&&o.dataEventsToUnbind.push(l(t,"remove",function(){s()})),o}animate(e){const o=this,t=o.chart.inverted,s=o.group,i={};!e&&s&&(e=t?o.yAxis.top:o.xAxis.left,t?(s["forceAnimate:translateY"]=!0,i.translateY=e):(s["forceAnimate:translateX"]=!0,i.translateX=e),s.animate(i,d(n(o.options.animation),{step:function(e,t){o.group.attr({scaleX:Math.max(.001,t.pos)})}})))}drawPoints(){var e=this;e.options.volumeDivision.enabled&&(e.posNegVolume(!0,!0),V.drawPoints.apply(e,arguments),e.posNegVolume(!1,!1)),V.drawPoints.apply(e,arguments)}posNegVolume(e,t){var o=this,s=t?["positive","negative"]:["negative","positive"],i=o.options.volumeDivision,a=o.points.length;let n=[],r=[],l=0,d,p,h,u;for(e?(o.posWidths=n,o.negWidths=r):(n=o.posWidths,r=o.negWidths);l<a;l++)(u=o.points[l])[s[0]+"Graphic"]=u.graphic,u.graphic=u[s[1]+"Graphic"],e&&(d=u.shapeArgs.width,(h=(p=o.priceZones[l]).wholeVolumeData)?(n.push(d/h*p.positiveVolumeData),r.push(d/h*p.negativeVolumeData)):(n.push(0),r.push(0))),u.color=t?i.styles.positiveColor:i.styles.negativeColor,u.shapeArgs.width=(t?o.posWidths:o.negWidths)[l],u.shapeArgs.x=t?u.shapeArgs.x:o.posWidths[l]}translate(){const o=this,e=o.options,t=o.chart,s=o.yAxis,i=s.min,a=o.options.zoneLines,n=o.priceZones;let r=0,l,d,p,h,u,c,m,v,g,f,y;V.translate.apply(o);const S=o.points;S.length&&(v=e.pointPadding<.5?e.pointPadding:.1,l=o.volumeDataArray,d=D(l),p=t.plotWidth/2,g=t.plotTop,h=P(s.toPixels(i)-s.toPixels(i+o.rangeStep)),c=P(s.toPixels(i)-s.toPixels(i+o.rangeStep)),v&&(u=P(h*(1-2*v)),r=P((h-u)/2),h=P(u)),S.forEach(function(e,t){f=e.barX=e.plotX=0,y=e.plotY=s.toPixels(n[t].start)-g-(s.reversed?h-c:h)-r,m=x(p*n[t].wholeVolumeData/d),e.pointWidth=m,e.shapeArgs=o.crispCol.apply(o,[0,y,m,h]),e.volumeNeg=n[t].negativeVolumeData,e.volumePos=n[t].positiveVolumeData,e.volumeAll=n[t].wholeVolumeData}),a.enabled&&o.drawZones(t,s,o.zoneStarts,a.styles))}getValues(e,t){const o=e.processedXData,s=e.processedYData,i=this.chart,a=t.ranges,n=[],r=[],l=[],d=i.get(t.volumeSeriesID);if(e.chart){var p;if(!d||!d.processedXData.length)return p=d&&!d.processedXData.length?" does not contain any data.":" not found! Check `volumeSeriesID`.",void u("Series "+t.volumeSeriesID+p,!0,i);t=c(s[0]);if(!t||4===s[0].length){const h=this.priceZones=this.specifyZones(t,o,s,a,d);return h.forEach(function(e,t){n.push([e.x,e.end]),r.push(n[t][0]),l.push(n[t][1])}),{values:n,xData:r,yData:l}}u("Type of "+e.name+" series is different than line, OHLC or candlestick.",!0,i)}else u("Base series not found! In case it has been removed, add a new one.",!0,i)}specifyZones(e,t,o,s,i){const a=this,n=!!e&&function(e){var t=e.length;let o=e[0][3],s=o,i=1,a;for(;i<t;i++)(a=e[i][3])<o&&(o=a),a>s&&(s=a);return{min:o,max:s}}(o),r=a.zoneStarts=[],l=[];let d=n?n.min:g(o),p=n?n.max:D(o),h=0,u=1;const c=a.linkedParent;if(!a.options.compareToMain&&c.dataModify&&(d=c.dataModify.modifyValue(d),p=c.dataModify.modifyValue(p)),!f(d)||!f(p))return this.points.length&&(this.setData([]),this.zoneStarts=[],this.zoneLinesSVG&&(this.zoneLinesSVG=this.zoneLinesSVG.destroy())),[];var m=a.rangeStep=x(p-d)/s;for(r.push(d);h<s-1;h++)r.push(x(r[h]+m));r.push(p);for(var v=r.length;u<v;u++)l.push({index:u-1,x:t[0],start:r[u-1],end:r[u]});return a.volumePerZone(e,l,i,t,o)}volumePerZone(o,e,t,s,i){const a=this,n=t.processedXData,r=t.processedYData,l=e.length-1,d=i.length,p=r.length;let h,u,c,m,v;return P(d-p)&&(s[0]!==n[0]&&r.unshift(0),s[d-1]!==n[p-1]&&r.push(0)),a.volumeDataArray=[],e.forEach(function(e){for(e.wholeVolumeData=0,e.positiveVolumeData=0,e.negativeVolumeData=0,v=0;v<d;v++){u=!1,c=!1,m=o?i[v][3]:i[v],h=v?o?i[v-1][3]:i[v-1]:m;const t=a.linkedParent;!a.options.compareToMain&&t.dataModify&&(m=t.dataModify.modifyValue(m),h=t.dataModify.modifyValue(h)),m<=e.start&&0===e.index&&(u=!0),m>=e.end&&e.index===l&&(c=!0),(m>e.start||u)&&(m<e.end||c)&&(e.wholeVolumeData+=r[v],h>m?e.negativeVolumeData+=r[v]:e.positiveVolumeData+=r[v])}a.volumeDataArray.push(e.wholeVolumeData)}),e}drawZones(t,o,e,s){const i=t.renderer,a=t.plotWidth,n=t.plotTop;let r=this.zoneLinesSVG,l=[],d;e.forEach(function(e){d=o.toPixels(e)-n,l=l.concat(t.renderer.crispLine([["M",0,d],["L",a,d]],s.lineWidth))}),r?r.animate({d:l}):r=this.zoneLinesSVG=i.path(l).attr({"stroke-width":s.lineWidth,stroke:s.color,dashstyle:s.dashStyle,zIndex:this.group.zIndex+.1}).add(this.group)}}return h.defaultOptions=p(r.defaultOptions,{params:{index:void 0,period:void 0,ranges:12,volumeSeriesID:"volume"},zoneLines:{enabled:!0,styles:{color:"#0A9AC9",dashStyle:"LongDash",lineWidth:1}},volumeDivision:{enabled:!0,styles:{positiveColor:"rgba(144, 237, 125, 0.8)",negativeColor:"rgba(244, 91, 91, 0.8)"}},animationLimit:1e3,enableMouseTracking:!1,pointPadding:0,zIndex:-1,crisp:!0,dataGrouping:{enabled:!1},dataLabels:{allowOverlap:!0,enabled:!0,format:"P: {point.volumePos:.2f} | N: {point.volumeNeg:.2f}",padding:0,style:{fontSize:"0.5em"},verticalAlign:"top"}}),d(h.prototype,{nameBase:"Volume by Price",nameComponents:["ranges"],calculateOn:{chart:"render",xAxis:"afterSetExtremes"},pointClass:e,markerAttribs:t,drawGraph:t,getColumnMetrics:V.getColumnMetrics,crispCol:V.crispCol}),s.registerSeriesType("vbp",h),h}),t(e,"masters/indicators/volume-by-price.src.js",[],function(){})});