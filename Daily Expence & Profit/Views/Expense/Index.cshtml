@model IEnumerable<Daily_Expence___Profit.Models.ExpenseTransaction>

@{
    ViewData["Title"] = "Index";
}

<style>
    /* Custom styles for label and dropdown */
    .custom-label {
        min-width: 100px; /* Set a minimum width for the labels */
    }

    .custom-dropdown {
        background-color: #ffffff; /* Background color */
        border: 1px solid #ccc; /* Border color */
        border-radius: 5px; /* Border radius */
        color: #333; /* Text color */
        font-size: 16px; /* Font size */
        padding: 10px; /* Padding */
        width: 150px; /* Adjust the width as needed */
        transition: border-color 0.3s ease, box-shadow 0.3s ease; /* Add transitions */
    }

        .custom-dropdown:hover {
            border-color: #aaa; /* Change border color on hover */
            box-shadow: 0 0 10px rgba(0, 0, 255, 0.5); /* Add a shadow on hover */
        }

        .custom-dropdown:focus {
            outline: none; /* Remove the default focus outline */
            border-color: #007bff; /* Change border color when focused */
            box-shadow: 0 0 10px rgba(0, 0, 255, 0.5); /* Add a shadow when focused */
        }

        /* Custom styles for dropdown items */
        .custom-dropdown option {
            background-color: #ffffff; /* Background color */
            color: #333; /* Text color */
            font-size: 16px; /* Font size */
            padding: 10px; /* Padding */
        }

            .custom-dropdown option:hover {
                background-color: #f0f0f0; /* Background color on hover */
                color: #333; /* Text color on hover */
            }

    .row {
        margin-top: 20px;
    }

    .input-group {
        flex-wrap: nowrap !important;
    }

    .card-text {
        margin-right: 10px;
        color: #dad1ff
    }

    .btn {
        border-radius: 25px;
    }

    .card-title {
        font-weight: bold;
        color: white;
        text-transform: capitalize
    }

    .card-body {
        padding: 15px 15px 15px 25px;
    }

    .card {
        background: linear-gradient(170deg, #001a96de, #030c49) !important;
        border-radius: 35px !important;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Add shadow */
        transition: box-shadow 0.3s ease; /* Add transition for hover effect */
    }

        .card:hover {
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.6); /* Increase shadow on hover */
        }


    .float-right {
        display: flex;
        float: right;
    }

    .btn-info {
        background-color: #2196f338;
        color: #ffffff;
        border: none;
        font-weight: 500;
        padding: 10px 20px;
        text-align: center;
        text-decoration:  none !important;
        display: inline-block;
        font-size: 16px;
        cursor: pointer;
    }

        .btn-info:hover {
            background-color: #1976D2;
            color: white;
        }

    .btn-danger {
        background-color: #f443364f;
        color: red;
        font-weight: 500;
        border: none;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin-left: 10px;
        cursor: pointer;
    }

        .btn-danger:hover {
            background-color: #D32F2F;
        }

    .floating-action-button {
        position: fixed;
        bottom: 85px;
        right: 20px;
        z-index: 1000;
        transition: box-shadow 0.3s ease;
    }

        .floating-action-button:hover {
            border-radius: 10%;
            box-shadow: 0 0 10px rgba(0, 0, 255, 0.5) !important;
        }

    .icon-container {
        text-decoration: none !important;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px; /* Adjust the size as needed */
        height: 40px; /* Adjust the size as needed */
    }

        .icon-container i {
            font-size: 24px; 
            text-decoration: none !important;
        }

    .custom-btn {
        text-decoration: none !important;
        background: linear-gradient(135deg, #1e0079a7, #0f003d) !important; /* Add !important to override Bootstrap styles */
        color: white !important; /* Text color */
        border: none !important; /* Remove button border */
        box-shadow: none !important; /* Remove button box shadow */
        margin: 0; /* Remove default margin */
        padding: 13px; /* Remove default padding */
        border-radius: 10%; /* Make button circular */
        display: flex;
        align-items: center;
        justify-content: center;
        transition: box-shadow 0.3s ease; /* Add transition for box-shadow */
    }

        .custom-btn:hover {
            box-shadow: 0 0 10px rgba(0, 0, 255, 0.5) !important; /* Add a glow effect on hover */
        }
</style>
<script>
    $(document).ready(function () {
        $("#sortCriteriaSelect, #sortOrderSelect").change(function () {
            var selectedCriteria = $("#sortCriteriaSelect").val();
            var selectedOrder = $("#sortOrderSelect").val();

            var sortedItems = $(".card").toArray().sort(function (a, b) {
                var valueA, valueB;

                switch (selectedCriteria) {
                    case "Price":
                        valueA = parseFloat($(a).find(".card-text").text().split('$')[1].trim());
                        valueB = parseFloat($(b).find(".card-text").text().split('$')[1].trim());
                        break;

                    case "Date":
                        // Parse the date strings in the format "DD-MM-YYYY"
                        var dateA = $(a).find(".card-text:contains('Date:')").text().split(': ')[1];
                        var dateB = $(b).find(".card-text:contains('Date:')").text().split(': ')[1];

                        var partsA = dateA.split('-');
                        var partsB = dateB.split('-');

                        // Construct Date objects with the correct format (YYYY-MM-DD)
                        valueA = new Date(partsA[2] + '-' + partsA[1] + '-' + partsA[0]);
                        valueB = new Date(partsB[2] + '-' + partsB[1] + '-' + partsB[0]);
                        break;

                    case "Name":
                        valueA = $(a).find(".card-title").text().toUpperCase();
                        valueB = $(b).find(".card-title").text().toUpperCase();
                        break;

                    default:
                        return 0;
                }

                if (selectedCriteria !== "Name") {
                    if (selectedOrder === "Descending") {
                        return valueB - valueA;
                    } else {
                        return valueA - valueB;
                    }
                } else {
                    if (selectedOrder === "Descending") {
                        return valueB.localeCompare(valueA);
                    } else {
                        return valueA.localeCompare(valueB);
                    }
                }
            });

            $(".transaction-container").html(sortedItems);
        });
    });
</script>

<div class="d-flex justify-content-between align-items-center">
    <h1>All The Transactions</h1>
    <div class="d-flex justify-content-end align-items-center">
        <div class="input-group">
            <div class="input-group-prepend">
                <label class="input-group-text custom-label" for="sortCriteriaSelect" style="padding-top: 12px;padding-bottom: 12px;">Sort By</label>
            </div>
            <select class="custom-select custom-dropdown" id="sortCriteriaSelect">
                <option value="Price">Price</option>
                <option value="Name">Name</option>
                <option value="Date">Date</option>
            </select>
        </div>
        <div class="input-group ml-2">
            <div class="input-group-append">
                <label class="input-group-text custom-label" for="sortOrderSelect" style="padding-top: 12px;padding-bottom: 12px;">Sort Order</label>
            </div>
            <select class="custom-select custom-dropdown" id="sortOrderSelect">
                <option value="Descending">Descending</option>
                <option value="Ascending">Ascending</option>
            </select>
        </div>
    </div>
</div>



<!-- Transaction list -->
<div class="row">
    <div class="col-md-12">
        <div class="transaction-container">
            @foreach (var item in Model)
            {
                <div class="card mb-3">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <h5 class="card-title">@item.Description</h5>
                            <p class="card-text" style="color: @(item.TransactionType.ToString() == "Income" ? "#2ce12c" : "red"); font-weight: bold;">$@(item.TransactionType.ToString() == "Income" ? item.Amount : -item.Amount)</p>

                        </div>
                        <p class="card-text" style="display: inline;">Date: @item.Date.ToShortDateString()</p>
                        <div class="float-right">
                            <!-- Move buttons to the right -->
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-info">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


<div class="floating-action-button">
    <a asp-controller="Expense" asp-action="Create" class="custom-btn">
        <div class="icon-container">
            <i class="fas fa-plus"></i>
        </div>
    </a>
</div>


